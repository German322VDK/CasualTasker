### YamlMime:XRefMap
sorted: true
references:
- uid: CasualTasker
  name: CasualTasker
  href: api/CasualTasker.html
  commentId: N:CasualTasker
  fullName: CasualTasker
  nameWithType: CasualTasker
- uid: CasualTasker.App
  name: App
  href: api/CasualTasker.App.html
  commentId: T:CasualTasker.App
  fullName: CasualTasker.App
  nameWithType: App
- uid: CasualTasker.App.Hosting
  name: Hosting
  href: api/CasualTasker.App.html#CasualTasker_App_Hosting
  commentId: P:CasualTasker.App.Hosting
  fullName: CasualTasker.App.Hosting
  nameWithType: App.Hosting
- uid: CasualTasker.App.Hosting*
  name: Hosting
  href: api/CasualTasker.App.html#CasualTasker_App_Hosting_
  commentId: Overload:CasualTasker.App.Hosting
  isSpec: "True"
  fullName: CasualTasker.App.Hosting
  nameWithType: App.Hosting
- uid: CasualTasker.App.InitializeComponent
  name: InitializeComponent()
  href: api/CasualTasker.App.html#CasualTasker_App_InitializeComponent
  commentId: M:CasualTasker.App.InitializeComponent
  fullName: CasualTasker.App.InitializeComponent()
  nameWithType: App.InitializeComponent()
- uid: CasualTasker.App.InitializeComponent*
  name: InitializeComponent
  href: api/CasualTasker.App.html#CasualTasker_App_InitializeComponent_
  commentId: Overload:CasualTasker.App.InitializeComponent
  isSpec: "True"
  fullName: CasualTasker.App.InitializeComponent
  nameWithType: App.InitializeComponent
- uid: CasualTasker.App.Main
  name: Main()
  href: api/CasualTasker.App.html#CasualTasker_App_Main
  commentId: M:CasualTasker.App.Main
  fullName: CasualTasker.App.Main()
  nameWithType: App.Main()
- uid: CasualTasker.App.Main*
  name: Main
  href: api/CasualTasker.App.html#CasualTasker_App_Main_
  commentId: Overload:CasualTasker.App.Main
  isSpec: "True"
  fullName: CasualTasker.App.Main
  nameWithType: App.Main
- uid: CasualTasker.App.OnStartup(System.Windows.StartupEventArgs)
  name: OnStartup(StartupEventArgs)
  href: api/CasualTasker.App.html#CasualTasker_App_OnStartup_System_Windows_StartupEventArgs_
  commentId: M:CasualTasker.App.OnStartup(System.Windows.StartupEventArgs)
  fullName: CasualTasker.App.OnStartup(System.Windows.StartupEventArgs)
  nameWithType: App.OnStartup(StartupEventArgs)
- uid: CasualTasker.App.OnStartup*
  name: OnStartup
  href: api/CasualTasker.App.html#CasualTasker_App_OnStartup_
  commentId: Overload:CasualTasker.App.OnStartup
  isSpec: "True"
  fullName: CasualTasker.App.OnStartup
  nameWithType: App.OnStartup
- uid: CasualTasker.App.Services
  name: Services
  href: api/CasualTasker.App.html#CasualTasker_App_Services
  commentId: P:CasualTasker.App.Services
  fullName: CasualTasker.App.Services
  nameWithType: App.Services
- uid: CasualTasker.App.Services*
  name: Services
  href: api/CasualTasker.App.html#CasualTasker_App_Services_
  commentId: Overload:CasualTasker.App.Services
  isSpec: "True"
  fullName: CasualTasker.App.Services
  nameWithType: App.Services
- uid: CasualTasker.Database.Context
  name: CasualTasker.Database.Context
  href: api/CasualTasker.Database.Context.html
  commentId: N:CasualTasker.Database.Context
  fullName: CasualTasker.Database.Context
  nameWithType: CasualTasker.Database.Context
- uid: CasualTasker.Database.Context.CasualTaskerDbContext
  name: CasualTaskerDbContext
  href: api/CasualTasker.Database.Context.CasualTaskerDbContext.html
  commentId: T:CasualTasker.Database.Context.CasualTaskerDbContext
  fullName: CasualTasker.Database.Context.CasualTaskerDbContext
  nameWithType: CasualTaskerDbContext
- uid: CasualTasker.Database.Context.CasualTaskerDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{CasualTasker.Database.Context.CasualTaskerDbContext})
  name: CasualTaskerDbContext(DbContextOptions<CasualTaskerDbContext>)
  href: api/CasualTasker.Database.Context.CasualTaskerDbContext.html#CasualTasker_Database_Context_CasualTaskerDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_CasualTasker_Database_Context_CasualTaskerDbContext__
  commentId: M:CasualTasker.Database.Context.CasualTaskerDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{CasualTasker.Database.Context.CasualTaskerDbContext})
  name.vb: CasualTaskerDbContext(DbContextOptions(Of CasualTaskerDbContext))
  fullName: CasualTasker.Database.Context.CasualTaskerDbContext.CasualTaskerDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<CasualTasker.Database.Context.CasualTaskerDbContext>)
  fullName.vb: CasualTasker.Database.Context.CasualTaskerDbContext.CasualTaskerDbContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of CasualTasker.Database.Context.CasualTaskerDbContext))
  nameWithType: CasualTaskerDbContext.CasualTaskerDbContext(DbContextOptions<CasualTaskerDbContext>)
  nameWithType.vb: CasualTaskerDbContext.CasualTaskerDbContext(DbContextOptions(Of CasualTaskerDbContext))
- uid: CasualTasker.Database.Context.CasualTaskerDbContext.#ctor*
  name: CasualTaskerDbContext
  href: api/CasualTasker.Database.Context.CasualTaskerDbContext.html#CasualTasker_Database_Context_CasualTaskerDbContext__ctor_
  commentId: Overload:CasualTasker.Database.Context.CasualTaskerDbContext.#ctor
  isSpec: "True"
  fullName: CasualTasker.Database.Context.CasualTaskerDbContext.CasualTaskerDbContext
  nameWithType: CasualTaskerDbContext.CasualTaskerDbContext
- uid: CasualTasker.Database.Context.CasualTaskerDbContext.Categories
  name: Categories
  href: api/CasualTasker.Database.Context.CasualTaskerDbContext.html#CasualTasker_Database_Context_CasualTaskerDbContext_Categories
  commentId: P:CasualTasker.Database.Context.CasualTaskerDbContext.Categories
  fullName: CasualTasker.Database.Context.CasualTaskerDbContext.Categories
  nameWithType: CasualTaskerDbContext.Categories
- uid: CasualTasker.Database.Context.CasualTaskerDbContext.Categories*
  name: Categories
  href: api/CasualTasker.Database.Context.CasualTaskerDbContext.html#CasualTasker_Database_Context_CasualTaskerDbContext_Categories_
  commentId: Overload:CasualTasker.Database.Context.CasualTaskerDbContext.Categories
  isSpec: "True"
  fullName: CasualTasker.Database.Context.CasualTaskerDbContext.Categories
  nameWithType: CasualTaskerDbContext.Categories
- uid: CasualTasker.Database.Context.CasualTaskerDbContext.Tasks
  name: Tasks
  href: api/CasualTasker.Database.Context.CasualTaskerDbContext.html#CasualTasker_Database_Context_CasualTaskerDbContext_Tasks
  commentId: P:CasualTasker.Database.Context.CasualTaskerDbContext.Tasks
  fullName: CasualTasker.Database.Context.CasualTaskerDbContext.Tasks
  nameWithType: CasualTaskerDbContext.Tasks
- uid: CasualTasker.Database.Context.CasualTaskerDbContext.Tasks*
  name: Tasks
  href: api/CasualTasker.Database.Context.CasualTaskerDbContext.html#CasualTasker_Database_Context_CasualTaskerDbContext_Tasks_
  commentId: Overload:CasualTasker.Database.Context.CasualTaskerDbContext.Tasks
  isSpec: "True"
  fullName: CasualTasker.Database.Context.CasualTaskerDbContext.Tasks
  nameWithType: CasualTaskerDbContext.Tasks
- uid: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite
  name: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite
  href: api/CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.html
  commentId: N:CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite
  fullName: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite
  nameWithType: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite
- uid: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory
  name: CasualTaskerDesignTimeSqliteDbContextFactory
  href: api/CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.html
  commentId: T:CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory
  fullName: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory
  nameWithType: CasualTaskerDesignTimeSqliteDbContextFactory
- uid: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(String[])
  href: api/CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.html#CasualTasker_Database_Context_DesignTimeDbContextFactories_Sqlite_CasualTaskerDesignTimeSqliteDbContextFactory_CreateDbContext_System_String___
  commentId: M:CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext(System.String[])
  fullName.vb: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext(System.String())
  nameWithType: CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext(String[])
  nameWithType.vb: CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext(String())
- uid: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: api/CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.html#CasualTasker_Database_Context_DesignTimeDbContextFactories_Sqlite_CasualTaskerDesignTimeSqliteDbContextFactory_CreateDbContext_
  commentId: Overload:CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: CasualTasker.Database.Context.DesignTimeDbContextFactories.Sqlite.CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext
  nameWithType: CasualTaskerDesignTimeSqliteDbContextFactory.CreateDbContext
- uid: CasualTasker.Database.Migrations
  name: CasualTasker.Database.Migrations
  href: api/CasualTasker.Database.Migrations.html
  commentId: N:CasualTasker.Database.Migrations
  fullName: CasualTasker.Database.Migrations
  nameWithType: CasualTasker.Database.Migrations
- uid: CasualTasker.Database.Migrations.Init
  name: Init
  href: api/CasualTasker.Database.Migrations.Init.html
  commentId: T:CasualTasker.Database.Migrations.Init
  fullName: CasualTasker.Database.Migrations.Init
  nameWithType: Init
- uid: CasualTasker.Database.Migrations.Init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/CasualTasker.Database.Migrations.Init.html#CasualTasker_Database_Migrations_Init_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:CasualTasker.Database.Migrations.Init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: CasualTasker.Database.Migrations.Init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Init.BuildTargetModel(ModelBuilder)
- uid: CasualTasker.Database.Migrations.Init.BuildTargetModel*
  name: BuildTargetModel
  href: api/CasualTasker.Database.Migrations.Init.html#CasualTasker_Database_Migrations_Init_BuildTargetModel_
  commentId: Overload:CasualTasker.Database.Migrations.Init.BuildTargetModel
  isSpec: "True"
  fullName: CasualTasker.Database.Migrations.Init.BuildTargetModel
  nameWithType: Init.BuildTargetModel
- uid: CasualTasker.Database.Migrations.Init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/CasualTasker.Database.Migrations.Init.html#CasualTasker_Database_Migrations_Init_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:CasualTasker.Database.Migrations.Init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: CasualTasker.Database.Migrations.Init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init.Down(MigrationBuilder)
- uid: CasualTasker.Database.Migrations.Init.Down*
  name: Down
  href: api/CasualTasker.Database.Migrations.Init.html#CasualTasker_Database_Migrations_Init_Down_
  commentId: Overload:CasualTasker.Database.Migrations.Init.Down
  isSpec: "True"
  fullName: CasualTasker.Database.Migrations.Init.Down
  nameWithType: Init.Down
- uid: CasualTasker.Database.Migrations.Init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/CasualTasker.Database.Migrations.Init.html#CasualTasker_Database_Migrations_Init_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:CasualTasker.Database.Migrations.Init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: CasualTasker.Database.Migrations.Init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init.Up(MigrationBuilder)
- uid: CasualTasker.Database.Migrations.Init.Up*
  name: Up
  href: api/CasualTasker.Database.Migrations.Init.html#CasualTasker_Database_Migrations_Init_Up_
  commentId: Overload:CasualTasker.Database.Migrations.Init.Up
  isSpec: "True"
  fullName: CasualTasker.Database.Migrations.Init.Up
  nameWithType: Init.Up
- uid: CasualTasker.DTO
  name: CasualTasker.DTO
  href: api/CasualTasker.DTO.html
  commentId: N:CasualTasker.DTO
  fullName: CasualTasker.DTO
  nameWithType: CasualTasker.DTO
- uid: CasualTasker.DTO.Base
  name: CasualTasker.DTO.Base
  href: api/CasualTasker.DTO.Base.html
  commentId: N:CasualTasker.DTO.Base
  fullName: CasualTasker.DTO.Base
  nameWithType: CasualTasker.DTO.Base
- uid: CasualTasker.DTO.Base.NamedEntity
  name: NamedEntity
  href: api/CasualTasker.DTO.Base.NamedEntity.html
  commentId: T:CasualTasker.DTO.Base.NamedEntity
  fullName: CasualTasker.DTO.Base.NamedEntity
  nameWithType: NamedEntity
- uid: CasualTasker.DTO.Base.NamedEntity.Clone
  name: Clone()
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_Clone
  commentId: M:CasualTasker.DTO.Base.NamedEntity.Clone
  fullName: CasualTasker.DTO.Base.NamedEntity.Clone()
  nameWithType: NamedEntity.Clone()
- uid: CasualTasker.DTO.Base.NamedEntity.Clone*
  name: Clone
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_Clone_
  commentId: Overload:CasualTasker.DTO.Base.NamedEntity.Clone
  isSpec: "True"
  fullName: CasualTasker.DTO.Base.NamedEntity.Clone
  nameWithType: NamedEntity.Clone
- uid: CasualTasker.DTO.Base.NamedEntity.Id
  name: Id
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_Id
  commentId: P:CasualTasker.DTO.Base.NamedEntity.Id
  fullName: CasualTasker.DTO.Base.NamedEntity.Id
  nameWithType: NamedEntity.Id
- uid: CasualTasker.DTO.Base.NamedEntity.Id*
  name: Id
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_Id_
  commentId: Overload:CasualTasker.DTO.Base.NamedEntity.Id
  isSpec: "True"
  fullName: CasualTasker.DTO.Base.NamedEntity.Id
  nameWithType: NamedEntity.Id
- uid: CasualTasker.DTO.Base.NamedEntity.Name
  name: Name
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_Name
  commentId: P:CasualTasker.DTO.Base.NamedEntity.Name
  fullName: CasualTasker.DTO.Base.NamedEntity.Name
  nameWithType: NamedEntity.Name
- uid: CasualTasker.DTO.Base.NamedEntity.Name*
  name: Name
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_Name_
  commentId: Overload:CasualTasker.DTO.Base.NamedEntity.Name
  isSpec: "True"
  fullName: CasualTasker.DTO.Base.NamedEntity.Name
  nameWithType: NamedEntity.Name
- uid: CasualTasker.DTO.Base.NamedEntity.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  name: UpdateFrom(NamedEntity)
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_UpdateFrom_CasualTasker_DTO_Base_NamedEntity_
  commentId: M:CasualTasker.DTO.Base.NamedEntity.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  fullName: CasualTasker.DTO.Base.NamedEntity.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  nameWithType: NamedEntity.UpdateFrom(NamedEntity)
- uid: CasualTasker.DTO.Base.NamedEntity.UpdateFrom*
  name: UpdateFrom
  href: api/CasualTasker.DTO.Base.NamedEntity.html#CasualTasker_DTO_Base_NamedEntity_UpdateFrom_
  commentId: Overload:CasualTasker.DTO.Base.NamedEntity.UpdateFrom
  isSpec: "True"
  fullName: CasualTasker.DTO.Base.NamedEntity.UpdateFrom
  nameWithType: NamedEntity.UpdateFrom
- uid: CasualTasker.DTO.CasualTaskStatus
  name: CasualTaskStatus
  href: api/CasualTasker.DTO.CasualTaskStatus.html
  commentId: T:CasualTasker.DTO.CasualTaskStatus
  fullName: CasualTasker.DTO.CasualTaskStatus
  nameWithType: CasualTaskStatus
- uid: CasualTasker.DTO.CasualTaskStatus.Completed
  name: Completed
  href: api/CasualTasker.DTO.CasualTaskStatus.html#CasualTasker_DTO_CasualTaskStatus_Completed
  commentId: F:CasualTasker.DTO.CasualTaskStatus.Completed
  fullName: CasualTasker.DTO.CasualTaskStatus.Completed
  nameWithType: CasualTaskStatus.Completed
- uid: CasualTasker.DTO.CasualTaskStatus.InProgress
  name: InProgress
  href: api/CasualTasker.DTO.CasualTaskStatus.html#CasualTasker_DTO_CasualTaskStatus_InProgress
  commentId: F:CasualTasker.DTO.CasualTaskStatus.InProgress
  fullName: CasualTasker.DTO.CasualTaskStatus.InProgress
  nameWithType: CasualTaskStatus.InProgress
- uid: CasualTasker.DTO.CasualTaskStatus.Postponed
  name: Postponed
  href: api/CasualTasker.DTO.CasualTaskStatus.html#CasualTasker_DTO_CasualTaskStatus_Postponed
  commentId: F:CasualTasker.DTO.CasualTaskStatus.Postponed
  fullName: CasualTasker.DTO.CasualTaskStatus.Postponed
  nameWithType: CasualTaskStatus.Postponed
- uid: CasualTasker.DTO.CategoryDTO
  name: CategoryDTO
  href: api/CasualTasker.DTO.CategoryDTO.html
  commentId: T:CasualTasker.DTO.CategoryDTO
  fullName: CasualTasker.DTO.CategoryDTO
  nameWithType: CategoryDTO
- uid: CasualTasker.DTO.CategoryDTO.Clone
  name: Clone()
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_Clone
  commentId: M:CasualTasker.DTO.CategoryDTO.Clone
  fullName: CasualTasker.DTO.CategoryDTO.Clone()
  nameWithType: CategoryDTO.Clone()
- uid: CasualTasker.DTO.CategoryDTO.Clone*
  name: Clone
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_Clone_
  commentId: Overload:CasualTasker.DTO.CategoryDTO.Clone
  isSpec: "True"
  fullName: CasualTasker.DTO.CategoryDTO.Clone
  nameWithType: CategoryDTO.Clone
- uid: CasualTasker.DTO.CategoryDTO.Color
  name: Color
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_Color
  commentId: P:CasualTasker.DTO.CategoryDTO.Color
  fullName: CasualTasker.DTO.CategoryDTO.Color
  nameWithType: CategoryDTO.Color
- uid: CasualTasker.DTO.CategoryDTO.Color*
  name: Color
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_Color_
  commentId: Overload:CasualTasker.DTO.CategoryDTO.Color
  isSpec: "True"
  fullName: CasualTasker.DTO.CategoryDTO.Color
  nameWithType: CategoryDTO.Color
- uid: CasualTasker.DTO.CategoryDTO.ToString
  name: ToString()
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_ToString
  commentId: M:CasualTasker.DTO.CategoryDTO.ToString
  fullName: CasualTasker.DTO.CategoryDTO.ToString()
  nameWithType: CategoryDTO.ToString()
- uid: CasualTasker.DTO.CategoryDTO.ToString*
  name: ToString
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_ToString_
  commentId: Overload:CasualTasker.DTO.CategoryDTO.ToString
  isSpec: "True"
  fullName: CasualTasker.DTO.CategoryDTO.ToString
  nameWithType: CategoryDTO.ToString
- uid: CasualTasker.DTO.CategoryDTO.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  name: UpdateFrom(NamedEntity)
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_UpdateFrom_CasualTasker_DTO_Base_NamedEntity_
  commentId: M:CasualTasker.DTO.CategoryDTO.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  fullName: CasualTasker.DTO.CategoryDTO.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  nameWithType: CategoryDTO.UpdateFrom(NamedEntity)
- uid: CasualTasker.DTO.CategoryDTO.UpdateFrom*
  name: UpdateFrom
  href: api/CasualTasker.DTO.CategoryDTO.html#CasualTasker_DTO_CategoryDTO_UpdateFrom_
  commentId: Overload:CasualTasker.DTO.CategoryDTO.UpdateFrom
  isSpec: "True"
  fullName: CasualTasker.DTO.CategoryDTO.UpdateFrom
  nameWithType: CategoryDTO.UpdateFrom
- uid: CasualTasker.DTO.TaskDTO
  name: TaskDTO
  href: api/CasualTasker.DTO.TaskDTO.html
  commentId: T:CasualTasker.DTO.TaskDTO
  fullName: CasualTasker.DTO.TaskDTO
  nameWithType: TaskDTO
- uid: CasualTasker.DTO.TaskDTO.Category
  name: Category
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Category
  commentId: P:CasualTasker.DTO.TaskDTO.Category
  fullName: CasualTasker.DTO.TaskDTO.Category
  nameWithType: TaskDTO.Category
- uid: CasualTasker.DTO.TaskDTO.Category*
  name: Category
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Category_
  commentId: Overload:CasualTasker.DTO.TaskDTO.Category
  isSpec: "True"
  fullName: CasualTasker.DTO.TaskDTO.Category
  nameWithType: TaskDTO.Category
- uid: CasualTasker.DTO.TaskDTO.Clone
  name: Clone()
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Clone
  commentId: M:CasualTasker.DTO.TaskDTO.Clone
  fullName: CasualTasker.DTO.TaskDTO.Clone()
  nameWithType: TaskDTO.Clone()
- uid: CasualTasker.DTO.TaskDTO.Clone*
  name: Clone
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Clone_
  commentId: Overload:CasualTasker.DTO.TaskDTO.Clone
  isSpec: "True"
  fullName: CasualTasker.DTO.TaskDTO.Clone
  nameWithType: TaskDTO.Clone
- uid: CasualTasker.DTO.TaskDTO.Description
  name: Description
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Description
  commentId: P:CasualTasker.DTO.TaskDTO.Description
  fullName: CasualTasker.DTO.TaskDTO.Description
  nameWithType: TaskDTO.Description
- uid: CasualTasker.DTO.TaskDTO.Description*
  name: Description
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Description_
  commentId: Overload:CasualTasker.DTO.TaskDTO.Description
  isSpec: "True"
  fullName: CasualTasker.DTO.TaskDTO.Description
  nameWithType: TaskDTO.Description
- uid: CasualTasker.DTO.TaskDTO.DueDate
  name: DueDate
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_DueDate
  commentId: P:CasualTasker.DTO.TaskDTO.DueDate
  fullName: CasualTasker.DTO.TaskDTO.DueDate
  nameWithType: TaskDTO.DueDate
- uid: CasualTasker.DTO.TaskDTO.DueDate*
  name: DueDate
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_DueDate_
  commentId: Overload:CasualTasker.DTO.TaskDTO.DueDate
  isSpec: "True"
  fullName: CasualTasker.DTO.TaskDTO.DueDate
  nameWithType: TaskDTO.DueDate
- uid: CasualTasker.DTO.TaskDTO.Status
  name: Status
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Status
  commentId: P:CasualTasker.DTO.TaskDTO.Status
  fullName: CasualTasker.DTO.TaskDTO.Status
  nameWithType: TaskDTO.Status
- uid: CasualTasker.DTO.TaskDTO.Status*
  name: Status
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_Status_
  commentId: Overload:CasualTasker.DTO.TaskDTO.Status
  isSpec: "True"
  fullName: CasualTasker.DTO.TaskDTO.Status
  nameWithType: TaskDTO.Status
- uid: CasualTasker.DTO.TaskDTO.ToString
  name: ToString()
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_ToString
  commentId: M:CasualTasker.DTO.TaskDTO.ToString
  fullName: CasualTasker.DTO.TaskDTO.ToString()
  nameWithType: TaskDTO.ToString()
- uid: CasualTasker.DTO.TaskDTO.ToString*
  name: ToString
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_ToString_
  commentId: Overload:CasualTasker.DTO.TaskDTO.ToString
  isSpec: "True"
  fullName: CasualTasker.DTO.TaskDTO.ToString
  nameWithType: TaskDTO.ToString
- uid: CasualTasker.DTO.TaskDTO.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  name: UpdateFrom(NamedEntity)
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_UpdateFrom_CasualTasker_DTO_Base_NamedEntity_
  commentId: M:CasualTasker.DTO.TaskDTO.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  fullName: CasualTasker.DTO.TaskDTO.UpdateFrom(CasualTasker.DTO.Base.NamedEntity)
  nameWithType: TaskDTO.UpdateFrom(NamedEntity)
- uid: CasualTasker.DTO.TaskDTO.UpdateFrom*
  name: UpdateFrom
  href: api/CasualTasker.DTO.TaskDTO.html#CasualTasker_DTO_TaskDTO_UpdateFrom_
  commentId: Overload:CasualTasker.DTO.TaskDTO.UpdateFrom
  isSpec: "True"
  fullName: CasualTasker.DTO.TaskDTO.UpdateFrom
  nameWithType: TaskDTO.UpdateFrom
- uid: CasualTasker.Infrastructure.Commands
  name: CasualTasker.Infrastructure.Commands
  href: api/CasualTasker.Infrastructure.Commands.html
  commentId: N:CasualTasker.Infrastructure.Commands
  fullName: CasualTasker.Infrastructure.Commands
  nameWithType: CasualTasker.Infrastructure.Commands
- uid: CasualTasker.Infrastructure.Commands.Base
  name: CasualTasker.Infrastructure.Commands.Base
  href: api/CasualTasker.Infrastructure.Commands.Base.html
  commentId: N:CasualTasker.Infrastructure.Commands.Base
  fullName: CasualTasker.Infrastructure.Commands.Base
  nameWithType: CasualTasker.Infrastructure.Commands.Base
- uid: CasualTasker.Infrastructure.Commands.Base.Command
  name: Command
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html
  commentId: T:CasualTasker.Infrastructure.Commands.Base.Command
  fullName: CasualTasker.Infrastructure.Commands.Base.Command
  nameWithType: Command
- uid: CasualTasker.Infrastructure.Commands.Base.Command.CanExecute(System.Object)
  name: CanExecute(Object)
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_CanExecute_System_Object_
  commentId: M:CasualTasker.Infrastructure.Commands.Base.Command.CanExecute(System.Object)
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.CanExecute(System.Object)
  nameWithType: Command.CanExecute(Object)
- uid: CasualTasker.Infrastructure.Commands.Base.Command.CanExecute*
  name: CanExecute
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_CanExecute_
  commentId: Overload:CasualTasker.Infrastructure.Commands.Base.Command.CanExecute
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.CanExecute
  nameWithType: Command.CanExecute
- uid: CasualTasker.Infrastructure.Commands.Base.Command.CanExecuteChanged
  name: CanExecuteChanged
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_CanExecuteChanged
  commentId: E:CasualTasker.Infrastructure.Commands.Base.Command.CanExecuteChanged
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.CanExecuteChanged
  nameWithType: Command.CanExecuteChanged
- uid: CasualTasker.Infrastructure.Commands.Base.Command.Execute(System.Object)
  name: Execute(Object)
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_Execute_System_Object_
  commentId: M:CasualTasker.Infrastructure.Commands.Base.Command.Execute(System.Object)
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.Execute(System.Object)
  nameWithType: Command.Execute(Object)
- uid: CasualTasker.Infrastructure.Commands.Base.Command.Execute*
  name: Execute
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_Execute_
  commentId: Overload:CasualTasker.Infrastructure.Commands.Base.Command.Execute
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.Execute
  nameWithType: Command.Execute
- uid: CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#CanExecute(System.Object)
  name: ICommand.CanExecute(Object)
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_System_Windows_Input_ICommand_CanExecute_System_Object_
  commentId: M:CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#CanExecute(System.Object)
  name.vb: System.Windows.Input.ICommand.CanExecute(Object)
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType: Command.ICommand.CanExecute(Object)
  nameWithType.vb: Command.System.Windows.Input.ICommand.CanExecute(Object)
- uid: CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#CanExecute*
  name: ICommand.CanExecute
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_System_Windows_Input_ICommand_CanExecute_
  commentId: Overload:CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#CanExecute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.CanExecute
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.System.Windows.Input.ICommand.CanExecute
  nameWithType: Command.ICommand.CanExecute
  nameWithType.vb: Command.System.Windows.Input.ICommand.CanExecute
- uid: CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#Execute(System.Object)
  name: ICommand.Execute(Object)
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_System_Windows_Input_ICommand_Execute_System_Object_
  commentId: M:CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#Execute(System.Object)
  name.vb: System.Windows.Input.ICommand.Execute(Object)
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType: Command.ICommand.Execute(Object)
  nameWithType.vb: Command.System.Windows.Input.ICommand.Execute(Object)
- uid: CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#Execute*
  name: ICommand.Execute
  href: api/CasualTasker.Infrastructure.Commands.Base.Command.html#CasualTasker_Infrastructure_Commands_Base_Command_System_Windows_Input_ICommand_Execute_
  commentId: Overload:CasualTasker.Infrastructure.Commands.Base.Command.System#Windows#Input#ICommand#Execute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.Execute
  fullName: CasualTasker.Infrastructure.Commands.Base.Command.System.Windows.Input.ICommand.Execute
  nameWithType: Command.ICommand.Execute
  nameWithType.vb: Command.System.Windows.Input.ICommand.Execute
- uid: CasualTasker.Infrastructure.Commands.LambdaCommand
  name: LambdaCommand
  href: api/CasualTasker.Infrastructure.Commands.LambdaCommand.html
  commentId: T:CasualTasker.Infrastructure.Commands.LambdaCommand
  fullName: CasualTasker.Infrastructure.Commands.LambdaCommand
  nameWithType: LambdaCommand
- uid: CasualTasker.Infrastructure.Commands.LambdaCommand.#ctor(Action{System.Object},Predicate{System.Object})
  name: LambdaCommand(Action<Object>, Predicate<Object>)
  href: api/CasualTasker.Infrastructure.Commands.LambdaCommand.html#CasualTasker_Infrastructure_Commands_LambdaCommand__ctor_Action_System_Object__Predicate_System_Object__
  commentId: M:CasualTasker.Infrastructure.Commands.LambdaCommand.#ctor(Action{System.Object},Predicate{System.Object})
  name.vb: LambdaCommand(Action(Of Object), Predicate(Of Object))
  fullName: CasualTasker.Infrastructure.Commands.LambdaCommand.LambdaCommand(Action<System.Object>, Predicate<System.Object>)
  fullName.vb: CasualTasker.Infrastructure.Commands.LambdaCommand.LambdaCommand(Action(Of System.Object), Predicate(Of System.Object))
  nameWithType: LambdaCommand.LambdaCommand(Action<Object>, Predicate<Object>)
  nameWithType.vb: LambdaCommand.LambdaCommand(Action(Of Object), Predicate(Of Object))
- uid: CasualTasker.Infrastructure.Commands.LambdaCommand.#ctor*
  name: LambdaCommand
  href: api/CasualTasker.Infrastructure.Commands.LambdaCommand.html#CasualTasker_Infrastructure_Commands_LambdaCommand__ctor_
  commentId: Overload:CasualTasker.Infrastructure.Commands.LambdaCommand.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Commands.LambdaCommand.LambdaCommand
  nameWithType: LambdaCommand.LambdaCommand
- uid: CasualTasker.Infrastructure.Commands.LambdaCommand.CanExecute(System.Object)
  name: CanExecute(Object)
  href: api/CasualTasker.Infrastructure.Commands.LambdaCommand.html#CasualTasker_Infrastructure_Commands_LambdaCommand_CanExecute_System_Object_
  commentId: M:CasualTasker.Infrastructure.Commands.LambdaCommand.CanExecute(System.Object)
  fullName: CasualTasker.Infrastructure.Commands.LambdaCommand.CanExecute(System.Object)
  nameWithType: LambdaCommand.CanExecute(Object)
- uid: CasualTasker.Infrastructure.Commands.LambdaCommand.CanExecute*
  name: CanExecute
  href: api/CasualTasker.Infrastructure.Commands.LambdaCommand.html#CasualTasker_Infrastructure_Commands_LambdaCommand_CanExecute_
  commentId: Overload:CasualTasker.Infrastructure.Commands.LambdaCommand.CanExecute
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Commands.LambdaCommand.CanExecute
  nameWithType: LambdaCommand.CanExecute
- uid: CasualTasker.Infrastructure.Commands.LambdaCommand.Execute(System.Object)
  name: Execute(Object)
  href: api/CasualTasker.Infrastructure.Commands.LambdaCommand.html#CasualTasker_Infrastructure_Commands_LambdaCommand_Execute_System_Object_
  commentId: M:CasualTasker.Infrastructure.Commands.LambdaCommand.Execute(System.Object)
  fullName: CasualTasker.Infrastructure.Commands.LambdaCommand.Execute(System.Object)
  nameWithType: LambdaCommand.Execute(Object)
- uid: CasualTasker.Infrastructure.Commands.LambdaCommand.Execute*
  name: Execute
  href: api/CasualTasker.Infrastructure.Commands.LambdaCommand.html#CasualTasker_Infrastructure_Commands_LambdaCommand_Execute_
  commentId: Overload:CasualTasker.Infrastructure.Commands.LambdaCommand.Execute
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Commands.LambdaCommand.Execute
  nameWithType: LambdaCommand.Execute
- uid: CasualTasker.Infrastructure.DbInitializers
  name: CasualTasker.Infrastructure.DbInitializers
  href: api/CasualTasker.Infrastructure.DbInitializers.html
  commentId: N:CasualTasker.Infrastructure.DbInitializers
  fullName: CasualTasker.Infrastructure.DbInitializers
  nameWithType: CasualTasker.Infrastructure.DbInitializers
- uid: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer
  name: CasualTaskerDbInitializer
  href: api/CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.html
  commentId: T:CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer
  fullName: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer
  nameWithType: CasualTaskerDbInitializer
- uid: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.#ctor(Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer},CasualTasker.Database.Context.CasualTaskerDbContext,CasualTasker.Services.Stores.IStore{CasualTasker.DTO.CategoryDTO},CasualTasker.Services.Stores.IStore{CasualTasker.DTO.TaskDTO},CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  name: CasualTaskerDbInitializer(ILogger<CasualTaskerDbInitializer>, CasualTaskerDbContext, IStore<CategoryDTO>, IStore<TaskDTO>, ICategoryFallbackService)
  href: api/CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.html#CasualTasker_Infrastructure_DbInitializers_CasualTaskerDbInitializer__ctor_Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_DbInitializers_CasualTaskerDbInitializer__CasualTasker_Database_Context_CasualTaskerDbContext_CasualTasker_Services_Stores_IStore_CasualTasker_DTO_CategoryDTO__CasualTasker_Services_Stores_IStore_CasualTasker_DTO_TaskDTO__CasualTasker_Services_Fallbacks_ICategoryFallbackService_
  commentId: M:CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.#ctor(Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer},CasualTasker.Database.Context.CasualTaskerDbContext,CasualTasker.Services.Stores.IStore{CasualTasker.DTO.CategoryDTO},CasualTasker.Services.Stores.IStore{CasualTasker.DTO.TaskDTO},CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  name.vb: CasualTaskerDbInitializer(ILogger(Of CasualTaskerDbInitializer), CasualTaskerDbContext, IStore(Of CategoryDTO), IStore(Of TaskDTO), ICategoryFallbackService)
  fullName: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.CasualTaskerDbInitializer(Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer>, CasualTasker.Database.Context.CasualTaskerDbContext, CasualTasker.Services.Stores.IStore<CasualTasker.DTO.CategoryDTO>, CasualTasker.Services.Stores.IStore<CasualTasker.DTO.TaskDTO>, CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  fullName.vb: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.CasualTaskerDbInitializer(Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer), CasualTasker.Database.Context.CasualTaskerDbContext, CasualTasker.Services.Stores.IStore(Of CasualTasker.DTO.CategoryDTO), CasualTasker.Services.Stores.IStore(Of CasualTasker.DTO.TaskDTO), CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  nameWithType: CasualTaskerDbInitializer.CasualTaskerDbInitializer(ILogger<CasualTaskerDbInitializer>, CasualTaskerDbContext, IStore<CategoryDTO>, IStore<TaskDTO>, ICategoryFallbackService)
  nameWithType.vb: CasualTaskerDbInitializer.CasualTaskerDbInitializer(ILogger(Of CasualTaskerDbInitializer), CasualTaskerDbContext, IStore(Of CategoryDTO), IStore(Of TaskDTO), ICategoryFallbackService)
- uid: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.#ctor*
  name: CasualTaskerDbInitializer
  href: api/CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.html#CasualTasker_Infrastructure_DbInitializers_CasualTaskerDbInitializer__ctor_
  commentId: Overload:CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.CasualTaskerDbInitializer
  nameWithType: CasualTaskerDbInitializer.CasualTaskerDbInitializer
- uid: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.InitializeAsync
  name: InitializeAsync()
  href: api/CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.html#CasualTasker_Infrastructure_DbInitializers_CasualTaskerDbInitializer_InitializeAsync
  commentId: M:CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.InitializeAsync
  fullName: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.InitializeAsync()
  nameWithType: CasualTaskerDbInitializer.InitializeAsync()
- uid: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.InitializeAsync*
  name: InitializeAsync
  href: api/CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.html#CasualTasker_Infrastructure_DbInitializers_CasualTaskerDbInitializer_InitializeAsync_
  commentId: Overload:CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.InitializeAsync
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.DbInitializers.CasualTaskerDbInitializer.InitializeAsync
  nameWithType: CasualTaskerDbInitializer.InitializeAsync
- uid: CasualTasker.Infrastructure.Middleware
  name: CasualTasker.Infrastructure.Middleware
  href: api/CasualTasker.Infrastructure.Middleware.html
  commentId: N:CasualTasker.Infrastructure.Middleware
  fullName: CasualTasker.Infrastructure.Middleware
  nameWithType: CasualTasker.Infrastructure.Middleware
- uid: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService
  name: ExceptionHandlingService
  href: api/CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.html
  commentId: T:CasualTasker.Infrastructure.Middleware.ExceptionHandlingService
  fullName: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService
  nameWithType: ExceptionHandlingService
- uid: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.#ctor(Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.Middleware.ExceptionHandlingService})
  name: ExceptionHandlingService(ILogger<ExceptionHandlingService>)
  href: api/CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.html#CasualTasker_Infrastructure_Middleware_ExceptionHandlingService__ctor_Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_Middleware_ExceptionHandlingService__
  commentId: M:CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.#ctor(Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.Middleware.ExceptionHandlingService})
  name.vb: ExceptionHandlingService(ILogger(Of ExceptionHandlingService))
  fullName: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.ExceptionHandlingService(Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.Middleware.ExceptionHandlingService>)
  fullName.vb: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.ExceptionHandlingService(Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.Middleware.ExceptionHandlingService))
  nameWithType: ExceptionHandlingService.ExceptionHandlingService(ILogger<ExceptionHandlingService>)
  nameWithType.vb: ExceptionHandlingService.ExceptionHandlingService(ILogger(Of ExceptionHandlingService))
- uid: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.#ctor*
  name: ExceptionHandlingService
  href: api/CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.html#CasualTasker_Infrastructure_Middleware_ExceptionHandlingService__ctor_
  commentId: Overload:CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.ExceptionHandlingService
  nameWithType: ExceptionHandlingService.ExceptionHandlingService
- uid: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.HandleException(Exception)
  name: HandleException(Exception)
  href: api/CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.html#CasualTasker_Infrastructure_Middleware_ExceptionHandlingService_HandleException_Exception_
  commentId: M:CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.HandleException(Exception)
  fullName: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.HandleException(Exception)
  nameWithType: ExceptionHandlingService.HandleException(Exception)
- uid: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.HandleException*
  name: HandleException
  href: api/CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.html#CasualTasker_Infrastructure_Middleware_ExceptionHandlingService_HandleException_
  commentId: Overload:CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.HandleException
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Middleware.ExceptionHandlingService.HandleException
  nameWithType: ExceptionHandlingService.HandleException
- uid: CasualTasker.Infrastructure.Middleware.IExceptionHandlingService
  name: IExceptionHandlingService
  href: api/CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.html
  commentId: T:CasualTasker.Infrastructure.Middleware.IExceptionHandlingService
  fullName: CasualTasker.Infrastructure.Middleware.IExceptionHandlingService
  nameWithType: IExceptionHandlingService
- uid: CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.HandleException(Exception)
  name: HandleException(Exception)
  href: api/CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.html#CasualTasker_Infrastructure_Middleware_IExceptionHandlingService_HandleException_Exception_
  commentId: M:CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.HandleException(Exception)
  fullName: CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.HandleException(Exception)
  nameWithType: IExceptionHandlingService.HandleException(Exception)
- uid: CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.HandleException*
  name: HandleException
  href: api/CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.html#CasualTasker_Infrastructure_Middleware_IExceptionHandlingService_HandleException_
  commentId: Overload:CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.HandleException
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.Middleware.IExceptionHandlingService.HandleException
  nameWithType: IExceptionHandlingService.HandleException
- uid: CasualTasker.Infrastructure.ObservableDbCollections
  name: CasualTasker.Infrastructure.ObservableDbCollections
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.html
  commentId: N:CasualTasker.Infrastructure.ObservableDbCollections
  fullName: CasualTasker.Infrastructure.ObservableDbCollections
  nameWithType: CasualTasker.Infrastructure.ObservableDbCollections
- uid: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer
  name: CategoryTaskSynchronizer
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.html
  commentId: T:CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer
  nameWithType: CategoryTaskSynchronizer
- uid: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection{CasualTasker.DTO.TaskDTO},CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection)
  name: CategoryTaskSynchronizer(IObservableDbCollection<TaskDTO>, ObservableCategoryDbCollection)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.html#CasualTasker_Infrastructure_ObservableDbCollections_CategoryTaskSynchronizer__ctor_CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_CasualTasker_DTO_TaskDTO__CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection{CasualTasker.DTO.TaskDTO},CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection)
  name.vb: CategoryTaskSynchronizer(IObservableDbCollection(Of TaskDTO), ObservableCategoryDbCollection)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.CategoryTaskSynchronizer(CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<CasualTasker.DTO.TaskDTO>, CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.CategoryTaskSynchronizer(CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of CasualTasker.DTO.TaskDTO), CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection)
  nameWithType: CategoryTaskSynchronizer.CategoryTaskSynchronizer(IObservableDbCollection<TaskDTO>, ObservableCategoryDbCollection)
  nameWithType.vb: CategoryTaskSynchronizer.CategoryTaskSynchronizer(IObservableDbCollection(Of TaskDTO), ObservableCategoryDbCollection)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.#ctor*
  name: CategoryTaskSynchronizer
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.html#CasualTasker_Infrastructure_ObservableDbCollections_CategoryTaskSynchronizer__ctor_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.CategoryTaskSynchronizer
  nameWithType: CategoryTaskSynchronizer.CategoryTaskSynchronizer
- uid: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.Synchronize
  name: Synchronize()
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.html#CasualTasker_Infrastructure_ObservableDbCollections_CategoryTaskSynchronizer_Synchronize
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.Synchronize
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.Synchronize()
  nameWithType: CategoryTaskSynchronizer.Synchronize()
- uid: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.Synchronize*
  name: Synchronize
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.html#CasualTasker_Infrastructure_ObservableDbCollections_CategoryTaskSynchronizer_Synchronize_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.Synchronize
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.CategoryTaskSynchronizer.Synchronize
  nameWithType: CategoryTaskSynchronizer.Synchronize
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository
  name: DataRepository
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html
  commentId: T:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository
  nameWithType: DataRepository
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.#ctor(CasualTasker.Services.Stores.IStore{CasualTasker.DTO.CategoryDTO},CasualTasker.Services.Stores.IStore{CasualTasker.DTO.TaskDTO},CasualTasker.Services.Fallbacks.ICategoryFallbackService,Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.DataRepository},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.CategoryDTO}},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.TaskDTO}})
  name: DataRepository(IStore<CategoryDTO>, IStore<TaskDTO>, ICategoryFallbackService, ILogger<DataRepository>, ILogger<ObservableDbCollection<CategoryDTO>>, ILogger<ObservableDbCollection<TaskDTO>>)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository__ctor_CasualTasker_Services_Stores_IStore_CasualTasker_DTO_CategoryDTO__CasualTasker_Services_Stores_IStore_CasualTasker_DTO_TaskDTO__CasualTasker_Services_Fallbacks_ICategoryFallbackService_Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_ObservableDbCollections_DataRepository__Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_CasualTasker_DTO_CategoryDTO___Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_CasualTasker_DTO_TaskDTO___
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.#ctor(CasualTasker.Services.Stores.IStore{CasualTasker.DTO.CategoryDTO},CasualTasker.Services.Stores.IStore{CasualTasker.DTO.TaskDTO},CasualTasker.Services.Fallbacks.ICategoryFallbackService,Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.DataRepository},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.CategoryDTO}},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.TaskDTO}})
  name.vb: DataRepository(IStore(Of CategoryDTO), IStore(Of TaskDTO), ICategoryFallbackService, ILogger(Of DataRepository), ILogger(Of ObservableDbCollection(Of CategoryDTO)), ILogger(Of ObservableDbCollection(Of TaskDTO)))
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.DataRepository(CasualTasker.Services.Stores.IStore<CasualTasker.DTO.CategoryDTO>, CasualTasker.Services.Stores.IStore<CasualTasker.DTO.TaskDTO>, CasualTasker.Services.Fallbacks.ICategoryFallbackService, Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.ObservableDbCollections.DataRepository>, Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<CasualTasker.DTO.CategoryDTO>>, Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<CasualTasker.DTO.TaskDTO>>)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.DataRepository(CasualTasker.Services.Stores.IStore(Of CasualTasker.DTO.CategoryDTO), CasualTasker.Services.Stores.IStore(Of CasualTasker.DTO.TaskDTO), CasualTasker.Services.Fallbacks.ICategoryFallbackService, Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.ObservableDbCollections.DataRepository), Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of CasualTasker.DTO.CategoryDTO)), Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of CasualTasker.DTO.TaskDTO)))
  nameWithType: DataRepository.DataRepository(IStore<CategoryDTO>, IStore<TaskDTO>, ICategoryFallbackService, ILogger<DataRepository>, ILogger<ObservableDbCollection<CategoryDTO>>, ILogger<ObservableDbCollection<TaskDTO>>)
  nameWithType.vb: DataRepository.DataRepository(IStore(Of CategoryDTO), IStore(Of TaskDTO), ICategoryFallbackService, ILogger(Of DataRepository), ILogger(Of ObservableDbCollection(Of CategoryDTO)), ILogger(Of ObservableDbCollection(Of TaskDTO)))
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.#ctor*
  name: DataRepository
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository__ctor_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.DataRepository
  nameWithType: DataRepository.DataRepository
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Categories
  name: Categories
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_Categories
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Categories
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Categories
  nameWithType: DataRepository.Categories
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Categories*
  name: Categories
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_Categories_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Categories
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Categories
  nameWithType: DataRepository.Categories
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Tasks
  name: Tasks
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_Tasks
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Tasks
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Tasks
  nameWithType: DataRepository.Tasks
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Tasks*
  name: Tasks
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_Tasks_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Tasks
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.Tasks
  nameWithType: DataRepository.Tasks
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.UpdateDataFromDB
  name: UpdateDataFromDB()
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_UpdateDataFromDB
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.UpdateDataFromDB
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.UpdateDataFromDB()
  nameWithType: DataRepository.UpdateDataFromDB()
- uid: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.UpdateDataFromDB*
  name: UpdateDataFromDB
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.html#CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_UpdateDataFromDB_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.UpdateDataFromDB
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.DataRepository.UpdateDataFromDB
  nameWithType: DataRepository.UpdateDataFromDB
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1
  name: IObservableDbCollection<TEntity>
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html
  commentId: T:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1
  name.vb: IObservableDbCollection(Of TEntity)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity)
  nameWithType: IObservableDbCollection<TEntity>
  nameWithType.vb: IObservableDbCollection(Of TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Add(`0)
  name: Add(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Add__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Add(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Add(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Add(TEntity)
  nameWithType: IObservableDbCollection<TEntity>.Add(TEntity)
  nameWithType.vb: IObservableDbCollection(Of TEntity).Add(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Add*
  name: Add
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Add_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Add
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Add
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Add
  nameWithType: IObservableDbCollection<TEntity>.Add
  nameWithType.vb: IObservableDbCollection(Of TEntity).Add
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.BatchUpdate(IEnumerable{`0})
  name: BatchUpdate(IEnumerable<TEntity>)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_BatchUpdate_IEnumerable__0__
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.BatchUpdate(IEnumerable{`0})
  name.vb: BatchUpdate(IEnumerable(Of TEntity))
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.BatchUpdate(IEnumerable<TEntity>)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).BatchUpdate(IEnumerable(Of TEntity))
  nameWithType: IObservableDbCollection<TEntity>.BatchUpdate(IEnumerable<TEntity>)
  nameWithType.vb: IObservableDbCollection(Of TEntity).BatchUpdate(IEnumerable(Of TEntity))
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.BatchUpdate*
  name: BatchUpdate
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_BatchUpdate_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.BatchUpdate
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.BatchUpdate
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).BatchUpdate
  nameWithType: IObservableDbCollection<TEntity>.BatchUpdate
  nameWithType.vb: IObservableDbCollection(Of TEntity).BatchUpdate
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.DefaultDeletedEntity
  name: DefaultDeletedEntity
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_DefaultDeletedEntity
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.DefaultDeletedEntity
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.DefaultDeletedEntity
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).DefaultDeletedEntity
  nameWithType: IObservableDbCollection<TEntity>.DefaultDeletedEntity
  nameWithType.vb: IObservableDbCollection(Of TEntity).DefaultDeletedEntity
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.DefaultDeletedEntity*
  name: DefaultDeletedEntity
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_DefaultDeletedEntity_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.DefaultDeletedEntity
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.DefaultDeletedEntity
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).DefaultDeletedEntity
  nameWithType: IObservableDbCollection<TEntity>.DefaultDeletedEntity
  nameWithType.vb: IObservableDbCollection(Of TEntity).DefaultDeletedEntity
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Delete(`0)
  name: Delete(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Delete__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Delete(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Delete(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Delete(TEntity)
  nameWithType: IObservableDbCollection<TEntity>.Delete(TEntity)
  nameWithType.vb: IObservableDbCollection(Of TEntity).Delete(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Delete*
  name: Delete
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Delete_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Delete
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Delete
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Delete
  nameWithType: IObservableDbCollection<TEntity>.Delete
  nameWithType.vb: IObservableDbCollection(Of TEntity).Delete
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Entities
  name: Entities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Entities
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Entities
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Entities
  nameWithType: IObservableDbCollection<TEntity>.Entities
  nameWithType.vb: IObservableDbCollection(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Entities*
  name: Entities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Entities_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Entities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Entities
  nameWithType: IObservableDbCollection<TEntity>.Entities
  nameWithType.vb: IObservableDbCollection(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.EntityExists(`0)
  name: EntityExists(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_EntityExists__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.EntityExists(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.EntityExists(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).EntityExists(TEntity)
  nameWithType: IObservableDbCollection<TEntity>.EntityExists(TEntity)
  nameWithType.vb: IObservableDbCollection(Of TEntity).EntityExists(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.EntityExists*
  name: EntityExists
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_EntityExists_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.EntityExists
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.EntityExists
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).EntityExists
  nameWithType: IObservableDbCollection<TEntity>.EntityExists
  nameWithType.vb: IObservableDbCollection(Of TEntity).EntityExists
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.First
  name: First
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_First
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.First
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).First
  nameWithType: IObservableDbCollection<TEntity>.First
  nameWithType.vb: IObservableDbCollection(Of TEntity).First
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.First*
  name: First
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_First_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.First
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).First
  nameWithType: IObservableDbCollection<TEntity>.First
  nameWithType.vb: IObservableDbCollection(Of TEntity).First
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Get(`0)
  name: Get(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Get__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Get(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Get(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Get(TEntity)
  nameWithType: IObservableDbCollection<TEntity>.Get(TEntity)
  nameWithType.vb: IObservableDbCollection(Of TEntity).Get(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Get(System.Int32)
  name: Get(Int32)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Get_System_Int32_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Get(System.Int32)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Get(System.Int32)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Get(System.Int32)
  nameWithType: IObservableDbCollection<TEntity>.Get(Int32)
  nameWithType.vb: IObservableDbCollection(Of TEntity).Get(Int32)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Get*
  name: Get
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Get_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Get
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Get
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Get
  nameWithType: IObservableDbCollection<TEntity>.Get
  nameWithType.vb: IObservableDbCollection(Of TEntity).Get
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Update(`0,System.Boolean)
  name: Update(TEntity, Boolean)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Update__0_System_Boolean_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Update(`0,System.Boolean)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Update(TEntity, System.Boolean)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Update(TEntity, System.Boolean)
  nameWithType: IObservableDbCollection<TEntity>.Update(TEntity, Boolean)
  nameWithType.vb: IObservableDbCollection(Of TEntity).Update(TEntity, Boolean)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Update*
  name: Update
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_Update_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.Update
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.Update
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).Update
  nameWithType: IObservableDbCollection<TEntity>.Update
  nameWithType.vb: IObservableDbCollection(Of TEntity).Update
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.UpdateFromDB
  name: UpdateFromDB()
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_UpdateFromDB
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.UpdateFromDB
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.UpdateFromDB()
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).UpdateFromDB()
  nameWithType: IObservableDbCollection<TEntity>.UpdateFromDB()
  nameWithType.vb: IObservableDbCollection(Of TEntity).UpdateFromDB()
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.UpdateFromDB*
  name: UpdateFromDB
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_UpdateFromDB_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.UpdateFromDB
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.UpdateFromDB
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).UpdateFromDB
  nameWithType: IObservableDbCollection<TEntity>.UpdateFromDB
  nameWithType.vb: IObservableDbCollection(Of TEntity).UpdateFromDB
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.ViewEntities
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_ViewEntities
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.ViewEntities
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).ViewEntities
  nameWithType: IObservableDbCollection<TEntity>.ViewEntities
  nameWithType.vb: IObservableDbCollection(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.ViewEntities*
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_IObservableDbCollection_1_ViewEntities_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection`1.ViewEntities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.IObservableDbCollection(Of TEntity).ViewEntities
  nameWithType: IObservableDbCollection<TEntity>.ViewEntities
  nameWithType.vb: IObservableDbCollection(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection
  name: ObservableCategoryDbCollection
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html
  commentId: T:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection
  nameWithType: ObservableCategoryDbCollection
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.#ctor(CasualTasker.Services.Stores.IStore{CasualTasker.DTO.CategoryDTO},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.CategoryDTO}},CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  name: ObservableCategoryDbCollection(IStore<CategoryDTO>, ILogger<ObservableDbCollection<CategoryDTO>>, ICategoryFallbackService)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection__ctor_CasualTasker_Services_Stores_IStore_CasualTasker_DTO_CategoryDTO__Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_CasualTasker_DTO_CategoryDTO___CasualTasker_Services_Fallbacks_ICategoryFallbackService_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.#ctor(CasualTasker.Services.Stores.IStore{CasualTasker.DTO.CategoryDTO},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.CategoryDTO}},CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  name.vb: ObservableCategoryDbCollection(IStore(Of CategoryDTO), ILogger(Of ObservableDbCollection(Of CategoryDTO)), ICategoryFallbackService)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.ObservableCategoryDbCollection(CasualTasker.Services.Stores.IStore<CasualTasker.DTO.CategoryDTO>, Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<CasualTasker.DTO.CategoryDTO>>, CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.ObservableCategoryDbCollection(CasualTasker.Services.Stores.IStore(Of CasualTasker.DTO.CategoryDTO), Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of CasualTasker.DTO.CategoryDTO)), CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  nameWithType: ObservableCategoryDbCollection.ObservableCategoryDbCollection(IStore<CategoryDTO>, ILogger<ObservableDbCollection<CategoryDTO>>, ICategoryFallbackService)
  nameWithType.vb: ObservableCategoryDbCollection.ObservableCategoryDbCollection(IStore(Of CategoryDTO), ILogger(Of ObservableDbCollection(Of CategoryDTO)), ICategoryFallbackService)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.#ctor*
  name: ObservableCategoryDbCollection
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection__ctor_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.ObservableCategoryDbCollection
  nameWithType: ObservableCategoryDbCollection.ObservableCategoryDbCollection
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.DefaultDeletedEntity
  name: DefaultDeletedEntity
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_DefaultDeletedEntity
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.DefaultDeletedEntity
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.DefaultDeletedEntity
  nameWithType: ObservableCategoryDbCollection.DefaultDeletedEntity
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.DefaultDeletedEntity*
  name: DefaultDeletedEntity
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_DefaultDeletedEntity_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.DefaultDeletedEntity
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.DefaultDeletedEntity
  nameWithType: ObservableCategoryDbCollection.DefaultDeletedEntity
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Delete(CasualTasker.DTO.CategoryDTO)
  name: Delete(CategoryDTO)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_Delete_CasualTasker_DTO_CategoryDTO_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Delete(CasualTasker.DTO.CategoryDTO)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Delete(CasualTasker.DTO.CategoryDTO)
  nameWithType: ObservableCategoryDbCollection.Delete(CategoryDTO)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Delete*
  name: Delete
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_Delete_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Delete
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Delete
  nameWithType: ObservableCategoryDbCollection.Delete
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.OnCategoryDeleted
  name: OnCategoryDeleted
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_OnCategoryDeleted
  commentId: E:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.OnCategoryDeleted
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.OnCategoryDeleted
  nameWithType: ObservableCategoryDbCollection.OnCategoryDeleted
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.OnCategoryUpdated
  name: OnCategoryUpdated
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_OnCategoryUpdated
  commentId: E:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.OnCategoryUpdated
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.OnCategoryUpdated
  nameWithType: ObservableCategoryDbCollection.OnCategoryUpdated
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Update(CasualTasker.DTO.CategoryDTO,System.Boolean)
  name: Update(CategoryDTO, Boolean)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_Update_CasualTasker_DTO_CategoryDTO_System_Boolean_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Update(CasualTasker.DTO.CategoryDTO,System.Boolean)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Update(CasualTasker.DTO.CategoryDTO, System.Boolean)
  nameWithType: ObservableCategoryDbCollection.Update(CategoryDTO, Boolean)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Update*
  name: Update
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableCategoryDbCollection_Update_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Update
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableCategoryDbCollection.Update
  nameWithType: ObservableCategoryDbCollection.Update
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1
  name: ObservableDbCollection<TEntity>
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html
  commentId: T:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1
  name.vb: ObservableDbCollection(Of TEntity)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity)
  nameWithType: ObservableDbCollection<TEntity>
  nameWithType.vb: ObservableDbCollection(Of TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.#ctor(CasualTasker.Services.Stores.IStore{`0},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{`0}})
  name: ObservableDbCollection(IStore<TEntity>, ILogger<ObservableDbCollection<TEntity>>)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1__ctor_CasualTasker_Services_Stores_IStore__0__Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection__0___
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.#ctor(CasualTasker.Services.Stores.IStore{`0},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{`0}})
  name.vb: ObservableDbCollection(IStore(Of TEntity), ILogger(Of ObservableDbCollection(Of TEntity)))
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.ObservableDbCollection(CasualTasker.Services.Stores.IStore<TEntity>, Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>>)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).ObservableDbCollection(CasualTasker.Services.Stores.IStore(Of TEntity), Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity)))
  nameWithType: ObservableDbCollection<TEntity>.ObservableDbCollection(IStore<TEntity>, ILogger<ObservableDbCollection<TEntity>>)
  nameWithType.vb: ObservableDbCollection(Of TEntity).ObservableDbCollection(IStore(Of TEntity), ILogger(Of ObservableDbCollection(Of TEntity)))
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.#ctor*
  name: ObservableDbCollection
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1__ctor_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.ObservableDbCollection
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).ObservableDbCollection
  nameWithType: ObservableDbCollection<TEntity>.ObservableDbCollection
  nameWithType.vb: ObservableDbCollection(Of TEntity).ObservableDbCollection
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1._logger
  name: _logger
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1__logger
  commentId: F:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1._logger
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>._logger
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity)._logger
  nameWithType: ObservableDbCollection<TEntity>._logger
  nameWithType.vb: ObservableDbCollection(Of TEntity)._logger
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Add(`0)
  name: Add(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Add__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Add(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Add(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Add(TEntity)
  nameWithType: ObservableDbCollection<TEntity>.Add(TEntity)
  nameWithType.vb: ObservableDbCollection(Of TEntity).Add(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Add*
  name: Add
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Add_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Add
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Add
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Add
  nameWithType: ObservableDbCollection<TEntity>.Add
  nameWithType.vb: ObservableDbCollection(Of TEntity).Add
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.BatchUpdate(IEnumerable{`0})
  name: BatchUpdate(IEnumerable<TEntity>)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_BatchUpdate_IEnumerable__0__
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.BatchUpdate(IEnumerable{`0})
  name.vb: BatchUpdate(IEnumerable(Of TEntity))
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.BatchUpdate(IEnumerable<TEntity>)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).BatchUpdate(IEnumerable(Of TEntity))
  nameWithType: ObservableDbCollection<TEntity>.BatchUpdate(IEnumerable<TEntity>)
  nameWithType.vb: ObservableDbCollection(Of TEntity).BatchUpdate(IEnumerable(Of TEntity))
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.BatchUpdate*
  name: BatchUpdate
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_BatchUpdate_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.BatchUpdate
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.BatchUpdate
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).BatchUpdate
  nameWithType: ObservableDbCollection<TEntity>.BatchUpdate
  nameWithType.vb: ObservableDbCollection(Of TEntity).BatchUpdate
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.DefaultDeletedEntity
  name: DefaultDeletedEntity
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_DefaultDeletedEntity
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.DefaultDeletedEntity
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.DefaultDeletedEntity
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).DefaultDeletedEntity
  nameWithType: ObservableDbCollection<TEntity>.DefaultDeletedEntity
  nameWithType.vb: ObservableDbCollection(Of TEntity).DefaultDeletedEntity
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.DefaultDeletedEntity*
  name: DefaultDeletedEntity
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_DefaultDeletedEntity_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.DefaultDeletedEntity
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.DefaultDeletedEntity
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).DefaultDeletedEntity
  nameWithType: ObservableDbCollection<TEntity>.DefaultDeletedEntity
  nameWithType.vb: ObservableDbCollection(Of TEntity).DefaultDeletedEntity
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Delete(`0)
  name: Delete(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Delete__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Delete(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Delete(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Delete(TEntity)
  nameWithType: ObservableDbCollection<TEntity>.Delete(TEntity)
  nameWithType.vb: ObservableDbCollection(Of TEntity).Delete(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Delete*
  name: Delete
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Delete_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Delete
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Delete
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Delete
  nameWithType: ObservableDbCollection<TEntity>.Delete
  nameWithType.vb: ObservableDbCollection(Of TEntity).Delete
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Entities
  name: Entities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Entities
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Entities
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Entities
  nameWithType: ObservableDbCollection<TEntity>.Entities
  nameWithType.vb: ObservableDbCollection(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Entities*
  name: Entities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Entities_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Entities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Entities
  nameWithType: ObservableDbCollection<TEntity>.Entities
  nameWithType.vb: ObservableDbCollection(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.EntityExists(`0)
  name: EntityExists(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_EntityExists__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.EntityExists(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.EntityExists(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).EntityExists(TEntity)
  nameWithType: ObservableDbCollection<TEntity>.EntityExists(TEntity)
  nameWithType.vb: ObservableDbCollection(Of TEntity).EntityExists(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.EntityExists*
  name: EntityExists
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_EntityExists_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.EntityExists
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.EntityExists
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).EntityExists
  nameWithType: ObservableDbCollection<TEntity>.EntityExists
  nameWithType.vb: ObservableDbCollection(Of TEntity).EntityExists
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.First
  name: First
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_First
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.First
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).First
  nameWithType: ObservableDbCollection<TEntity>.First
  nameWithType.vb: ObservableDbCollection(Of TEntity).First
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.First*
  name: First
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_First_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.First
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).First
  nameWithType: ObservableDbCollection<TEntity>.First
  nameWithType.vb: ObservableDbCollection(Of TEntity).First
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Get(`0)
  name: Get(TEntity)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Get__0_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Get(`0)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Get(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Get(TEntity)
  nameWithType: ObservableDbCollection<TEntity>.Get(TEntity)
  nameWithType.vb: ObservableDbCollection(Of TEntity).Get(TEntity)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Get(System.Int32)
  name: Get(Int32)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Get_System_Int32_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Get(System.Int32)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Get(System.Int32)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Get(System.Int32)
  nameWithType: ObservableDbCollection<TEntity>.Get(Int32)
  nameWithType.vb: ObservableDbCollection(Of TEntity).Get(Int32)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Get*
  name: Get
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Get_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Get
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Get
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Get
  nameWithType: ObservableDbCollection<TEntity>.Get
  nameWithType.vb: ObservableDbCollection(Of TEntity).Get
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Update(`0,System.Boolean)
  name: Update(TEntity, Boolean)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Update__0_System_Boolean_
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Update(`0,System.Boolean)
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Update(TEntity, System.Boolean)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Update(TEntity, System.Boolean)
  nameWithType: ObservableDbCollection<TEntity>.Update(TEntity, Boolean)
  nameWithType.vb: ObservableDbCollection(Of TEntity).Update(TEntity, Boolean)
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Update*
  name: Update
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_Update_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.Update
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.Update
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).Update
  nameWithType: ObservableDbCollection<TEntity>.Update
  nameWithType.vb: ObservableDbCollection(Of TEntity).Update
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.UpdateFromDB
  name: UpdateFromDB()
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_UpdateFromDB
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.UpdateFromDB
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.UpdateFromDB()
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).UpdateFromDB()
  nameWithType: ObservableDbCollection<TEntity>.UpdateFromDB()
  nameWithType.vb: ObservableDbCollection(Of TEntity).UpdateFromDB()
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.UpdateFromDB*
  name: UpdateFromDB
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_UpdateFromDB_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.UpdateFromDB
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.UpdateFromDB
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).UpdateFromDB
  nameWithType: ObservableDbCollection<TEntity>.UpdateFromDB
  nameWithType.vb: ObservableDbCollection(Of TEntity).UpdateFromDB
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.ViewEntities
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_ViewEntities
  commentId: P:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.ViewEntities
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).ViewEntities
  nameWithType: ObservableDbCollection<TEntity>.ViewEntities
  nameWithType.vb: ObservableDbCollection(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.ViewEntities*
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection-1.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_1_ViewEntities_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection`1.ViewEntities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of TEntity).ViewEntities
  nameWithType: ObservableDbCollection<TEntity>.ViewEntities
  nameWithType.vb: ObservableDbCollection(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection
  name: ObservableTaskDbCollection
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.html
  commentId: T:CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection
  nameWithType: ObservableTaskDbCollection
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.#ctor(CasualTasker.Services.Stores.IStore{CasualTasker.DTO.TaskDTO},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.TaskDTO}})
  name: ObservableTaskDbCollection(IStore<TaskDTO>, ILogger<ObservableDbCollection<TaskDTO>>)
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableTaskDbCollection__ctor_CasualTasker_Services_Stores_IStore_CasualTasker_DTO_TaskDTO__Microsoft_Extensions_Logging_ILogger_CasualTasker_Infrastructure_ObservableDbCollections_ObservableDbCollection_CasualTasker_DTO_TaskDTO___
  commentId: M:CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.#ctor(CasualTasker.Services.Stores.IStore{CasualTasker.DTO.TaskDTO},Microsoft.Extensions.Logging.ILogger{CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection{CasualTasker.DTO.TaskDTO}})
  name.vb: ObservableTaskDbCollection(IStore(Of TaskDTO), ILogger(Of ObservableDbCollection(Of TaskDTO)))
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.ObservableTaskDbCollection(CasualTasker.Services.Stores.IStore<CasualTasker.DTO.TaskDTO>, Microsoft.Extensions.Logging.ILogger<CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection<CasualTasker.DTO.TaskDTO>>)
  fullName.vb: CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.ObservableTaskDbCollection(CasualTasker.Services.Stores.IStore(Of CasualTasker.DTO.TaskDTO), Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Infrastructure.ObservableDbCollections.ObservableDbCollection(Of CasualTasker.DTO.TaskDTO)))
  nameWithType: ObservableTaskDbCollection.ObservableTaskDbCollection(IStore<TaskDTO>, ILogger<ObservableDbCollection<TaskDTO>>)
  nameWithType.vb: ObservableTaskDbCollection.ObservableTaskDbCollection(IStore(Of TaskDTO), ILogger(Of ObservableDbCollection(Of TaskDTO)))
- uid: CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.#ctor*
  name: ObservableTaskDbCollection
  href: api/CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.html#CasualTasker_Infrastructure_ObservableDbCollections_ObservableTaskDbCollection__ctor_
  commentId: Overload:CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ObservableDbCollections.ObservableTaskDbCollection.ObservableTaskDbCollection
  nameWithType: ObservableTaskDbCollection.ObservableTaskDbCollection
- uid: CasualTasker.Infrastructure.ValidationRules
  name: CasualTasker.Infrastructure.ValidationRules
  href: api/CasualTasker.Infrastructure.ValidationRules.html
  commentId: N:CasualTasker.Infrastructure.ValidationRules
  fullName: CasualTasker.Infrastructure.ValidationRules
  nameWithType: CasualTasker.Infrastructure.ValidationRules
- uid: CasualTasker.Infrastructure.ValidationRules.EnumValidationRule
  name: EnumValidationRule
  href: api/CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.html
  commentId: T:CasualTasker.Infrastructure.ValidationRules.EnumValidationRule
  fullName: CasualTasker.Infrastructure.ValidationRules.EnumValidationRule
  nameWithType: EnumValidationRule
- uid: CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  name: Validate(Object, CultureInfo)
  href: api/CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.html#CasualTasker_Infrastructure_ValidationRules_EnumValidationRule_Validate_System_Object_System_Globalization_CultureInfo_
  commentId: M:CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  fullName: CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.Validate(System.Object, System.Globalization.CultureInfo)
  nameWithType: EnumValidationRule.Validate(Object, CultureInfo)
- uid: CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.Validate*
  name: Validate
  href: api/CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.html#CasualTasker_Infrastructure_ValidationRules_EnumValidationRule_Validate_
  commentId: Overload:CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.Validate
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ValidationRules.EnumValidationRule.Validate
  nameWithType: EnumValidationRule.Validate
- uid: CasualTasker.Infrastructure.ValidationRules.NameValidationRule
  name: NameValidationRule
  href: api/CasualTasker.Infrastructure.ValidationRules.NameValidationRule.html
  commentId: T:CasualTasker.Infrastructure.ValidationRules.NameValidationRule
  fullName: CasualTasker.Infrastructure.ValidationRules.NameValidationRule
  nameWithType: NameValidationRule
- uid: CasualTasker.Infrastructure.ValidationRules.NameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  name: Validate(Object, CultureInfo)
  href: api/CasualTasker.Infrastructure.ValidationRules.NameValidationRule.html#CasualTasker_Infrastructure_ValidationRules_NameValidationRule_Validate_System_Object_System_Globalization_CultureInfo_
  commentId: M:CasualTasker.Infrastructure.ValidationRules.NameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  fullName: CasualTasker.Infrastructure.ValidationRules.NameValidationRule.Validate(System.Object, System.Globalization.CultureInfo)
  nameWithType: NameValidationRule.Validate(Object, CultureInfo)
- uid: CasualTasker.Infrastructure.ValidationRules.NameValidationRule.Validate*
  name: Validate
  href: api/CasualTasker.Infrastructure.ValidationRules.NameValidationRule.html#CasualTasker_Infrastructure_ValidationRules_NameValidationRule_Validate_
  commentId: Overload:CasualTasker.Infrastructure.ValidationRules.NameValidationRule.Validate
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ValidationRules.NameValidationRule.Validate
  nameWithType: NameValidationRule.Validate
- uid: CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule
  name: NotNullValidationRule
  href: api/CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.html
  commentId: T:CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule
  fullName: CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule
  nameWithType: NotNullValidationRule
- uid: CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  name: Validate(Object, CultureInfo)
  href: api/CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.html#CasualTasker_Infrastructure_ValidationRules_NotNullValidationRule_Validate_System_Object_System_Globalization_CultureInfo_
  commentId: M:CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  fullName: CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.Validate(System.Object, System.Globalization.CultureInfo)
  nameWithType: NotNullValidationRule.Validate(Object, CultureInfo)
- uid: CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.Validate*
  name: Validate
  href: api/CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.html#CasualTasker_Infrastructure_ValidationRules_NotNullValidationRule_Validate_
  commentId: Overload:CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.Validate
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ValidationRules.NotNullValidationRule.Validate
  nameWithType: NotNullValidationRule.Validate
- uid: CasualTasker.Infrastructure.ViewUpdaters
  name: CasualTasker.Infrastructure.ViewUpdaters
  href: api/CasualTasker.Infrastructure.ViewUpdaters.html
  commentId: N:CasualTasker.Infrastructure.ViewUpdaters
  fullName: CasualTasker.Infrastructure.ViewUpdaters
  nameWithType: CasualTasker.Infrastructure.ViewUpdaters
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1
  name: IViewUpdater<TEntity>
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html
  commentId: T:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1
  name.vb: IViewUpdater(Of TEntity)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity)
  nameWithType: IViewUpdater<TEntity>
  nameWithType.vb: IViewUpdater(Of TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Add(`0)
  name: Add(TEntity)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Add__0_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Add(`0)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Add(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Add(TEntity)
  nameWithType: IViewUpdater<TEntity>.Add(TEntity)
  nameWithType.vb: IViewUpdater(Of TEntity).Add(TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Add*
  name: Add
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Add_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Add
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Add
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Add
  nameWithType: IViewUpdater<TEntity>.Add
  nameWithType.vb: IViewUpdater(Of TEntity).Add
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Delete(System.Int32)
  name: Delete(Int32)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Delete_System_Int32_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Delete(System.Int32)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Delete(System.Int32)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Delete(System.Int32)
  nameWithType: IViewUpdater<TEntity>.Delete(Int32)
  nameWithType.vb: IViewUpdater(Of TEntity).Delete(Int32)
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Delete*
  name: Delete
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Delete_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Delete
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Delete
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Delete
  nameWithType: IViewUpdater<TEntity>.Delete
  nameWithType.vb: IViewUpdater(Of TEntity).Delete
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Entities
  name: Entities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Entities
  commentId: P:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Entities
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Entities
  nameWithType: IViewUpdater<TEntity>.Entities
  nameWithType.vb: IViewUpdater(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Entities*
  name: Entities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Entities_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Entities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Entities
  nameWithType: IViewUpdater<TEntity>.Entities
  nameWithType.vb: IViewUpdater(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.First
  name: First
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_First
  commentId: P:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.First
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).First
  nameWithType: IViewUpdater<TEntity>.First
  nameWithType.vb: IViewUpdater(Of TEntity).First
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.First*
  name: First
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_First_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.First
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).First
  nameWithType: IViewUpdater<TEntity>.First
  nameWithType.vb: IViewUpdater(Of TEntity).First
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Get(`0)
  name: Get(TEntity)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Get__0_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Get(`0)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Get(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Get(TEntity)
  nameWithType: IViewUpdater<TEntity>.Get(TEntity)
  nameWithType.vb: IViewUpdater(Of TEntity).Get(TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Get(System.Int32)
  name: Get(Int32)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Get_System_Int32_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Get(System.Int32)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Get(System.Int32)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Get(System.Int32)
  nameWithType: IViewUpdater<TEntity>.Get(Int32)
  nameWithType.vb: IViewUpdater(Of TEntity).Get(Int32)
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Get*
  name: Get
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Get_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Get
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Get
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Get
  nameWithType: IViewUpdater<TEntity>.Get
  nameWithType.vb: IViewUpdater(Of TEntity).Get
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Update(`0)
  name: Update(TEntity)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Update__0_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Update(`0)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Update(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Update(TEntity)
  nameWithType: IViewUpdater<TEntity>.Update(TEntity)
  nameWithType.vb: IViewUpdater(Of TEntity).Update(TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Update*
  name: Update
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_Update_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.Update
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.Update
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).Update
  nameWithType: IViewUpdater<TEntity>.Update
  nameWithType.vb: IViewUpdater(Of TEntity).Update
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.UpdateFromDB(IEnumerable{`0})
  name: UpdateFromDB(IEnumerable<TEntity>)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_UpdateFromDB_IEnumerable__0__
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.UpdateFromDB(IEnumerable{`0})
  name.vb: UpdateFromDB(IEnumerable(Of TEntity))
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.UpdateFromDB(IEnumerable<TEntity>)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).UpdateFromDB(IEnumerable(Of TEntity))
  nameWithType: IViewUpdater<TEntity>.UpdateFromDB(IEnumerable<TEntity>)
  nameWithType.vb: IViewUpdater(Of TEntity).UpdateFromDB(IEnumerable(Of TEntity))
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.UpdateFromDB*
  name: UpdateFromDB
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_UpdateFromDB_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.UpdateFromDB
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.UpdateFromDB
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).UpdateFromDB
  nameWithType: IViewUpdater<TEntity>.UpdateFromDB
  nameWithType.vb: IViewUpdater(Of TEntity).UpdateFromDB
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.ViewEntities
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_ViewEntities
  commentId: P:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.ViewEntities
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).ViewEntities
  nameWithType: IViewUpdater<TEntity>.ViewEntities
  nameWithType.vb: IViewUpdater(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.ViewEntities*
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_IViewUpdater_1_ViewEntities_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater`1.ViewEntities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.IViewUpdater(Of TEntity).ViewEntities
  nameWithType: IViewUpdater<TEntity>.ViewEntities
  nameWithType.vb: IViewUpdater(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1
  name: ViewUpdater<TEntity>
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html
  commentId: T:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1
  name.vb: ViewUpdater(Of TEntity)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity)
  nameWithType: ViewUpdater<TEntity>
  nameWithType.vb: ViewUpdater(Of TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})
  name: ViewUpdater(ObservableCollection<TEntity>)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1__ctor_System_Collections_ObjectModel_ObservableCollection__0__
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})
  name.vb: ViewUpdater(ObservableCollection(Of TEntity))
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.ViewUpdater(System.Collections.ObjectModel.ObservableCollection<TEntity>)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).ViewUpdater(System.Collections.ObjectModel.ObservableCollection(Of TEntity))
  nameWithType: ViewUpdater<TEntity>.ViewUpdater(ObservableCollection<TEntity>)
  nameWithType.vb: ViewUpdater(Of TEntity).ViewUpdater(ObservableCollection(Of TEntity))
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.#ctor*
  name: ViewUpdater
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1__ctor_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.ViewUpdater
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).ViewUpdater
  nameWithType: ViewUpdater<TEntity>.ViewUpdater
  nameWithType.vb: ViewUpdater(Of TEntity).ViewUpdater
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Add(`0)
  name: Add(TEntity)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Add__0_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Add(`0)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Add(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Add(TEntity)
  nameWithType: ViewUpdater<TEntity>.Add(TEntity)
  nameWithType.vb: ViewUpdater(Of TEntity).Add(TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Add*
  name: Add
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Add_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Add
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Add
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Add
  nameWithType: ViewUpdater<TEntity>.Add
  nameWithType.vb: ViewUpdater(Of TEntity).Add
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Delete(System.Int32)
  name: Delete(Int32)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Delete_System_Int32_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Delete(System.Int32)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Delete(System.Int32)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Delete(System.Int32)
  nameWithType: ViewUpdater<TEntity>.Delete(Int32)
  nameWithType.vb: ViewUpdater(Of TEntity).Delete(Int32)
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Delete*
  name: Delete
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Delete_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Delete
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Delete
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Delete
  nameWithType: ViewUpdater<TEntity>.Delete
  nameWithType.vb: ViewUpdater(Of TEntity).Delete
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Entities
  name: Entities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Entities
  commentId: P:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Entities
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Entities
  nameWithType: ViewUpdater<TEntity>.Entities
  nameWithType.vb: ViewUpdater(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Entities*
  name: Entities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Entities_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Entities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Entities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Entities
  nameWithType: ViewUpdater<TEntity>.Entities
  nameWithType.vb: ViewUpdater(Of TEntity).Entities
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.First
  name: First
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_First
  commentId: P:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.First
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).First
  nameWithType: ViewUpdater<TEntity>.First
  nameWithType.vb: ViewUpdater(Of TEntity).First
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.First*
  name: First
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_First_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.First
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.First
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).First
  nameWithType: ViewUpdater<TEntity>.First
  nameWithType.vb: ViewUpdater(Of TEntity).First
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Get(`0)
  name: Get(TEntity)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Get__0_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Get(`0)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Get(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Get(TEntity)
  nameWithType: ViewUpdater<TEntity>.Get(TEntity)
  nameWithType.vb: ViewUpdater(Of TEntity).Get(TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Get(System.Int32)
  name: Get(Int32)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Get_System_Int32_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Get(System.Int32)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Get(System.Int32)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Get(System.Int32)
  nameWithType: ViewUpdater<TEntity>.Get(Int32)
  nameWithType.vb: ViewUpdater(Of TEntity).Get(Int32)
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Get*
  name: Get
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Get_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Get
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Get
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Get
  nameWithType: ViewUpdater<TEntity>.Get
  nameWithType.vb: ViewUpdater(Of TEntity).Get
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Update(`0)
  name: Update(TEntity)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Update__0_
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Update(`0)
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Update(TEntity)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Update(TEntity)
  nameWithType: ViewUpdater<TEntity>.Update(TEntity)
  nameWithType.vb: ViewUpdater(Of TEntity).Update(TEntity)
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Update*
  name: Update
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_Update_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.Update
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.Update
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).Update
  nameWithType: ViewUpdater<TEntity>.Update
  nameWithType.vb: ViewUpdater(Of TEntity).Update
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.UpdateFromDB(IEnumerable{`0})
  name: UpdateFromDB(IEnumerable<TEntity>)
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_UpdateFromDB_IEnumerable__0__
  commentId: M:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.UpdateFromDB(IEnumerable{`0})
  name.vb: UpdateFromDB(IEnumerable(Of TEntity))
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.UpdateFromDB(IEnumerable<TEntity>)
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).UpdateFromDB(IEnumerable(Of TEntity))
  nameWithType: ViewUpdater<TEntity>.UpdateFromDB(IEnumerable<TEntity>)
  nameWithType.vb: ViewUpdater(Of TEntity).UpdateFromDB(IEnumerable(Of TEntity))
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.UpdateFromDB*
  name: UpdateFromDB
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_UpdateFromDB_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.UpdateFromDB
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.UpdateFromDB
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).UpdateFromDB
  nameWithType: ViewUpdater<TEntity>.UpdateFromDB
  nameWithType.vb: ViewUpdater(Of TEntity).UpdateFromDB
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.ViewEntities
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_ViewEntities
  commentId: P:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.ViewEntities
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).ViewEntities
  nameWithType: ViewUpdater<TEntity>.ViewEntities
  nameWithType.vb: ViewUpdater(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.ViewEntities*
  name: ViewEntities
  href: api/CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater-1.html#CasualTasker_Infrastructure_ViewUpdaters_ViewUpdater_1_ViewEntities_
  commentId: Overload:CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater`1.ViewEntities
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater<TEntity>.ViewEntities
  fullName.vb: CasualTasker.Infrastructure.ViewUpdaters.ViewUpdater(Of TEntity).ViewEntities
  nameWithType: ViewUpdater<TEntity>.ViewEntities
  nameWithType.vb: ViewUpdater(Of TEntity).ViewEntities
- uid: CasualTasker.Infrastructure.WPFExtension
  name: CasualTasker.Infrastructure.WPFExtension
  href: api/CasualTasker.Infrastructure.WPFExtension.html
  commentId: N:CasualTasker.Infrastructure.WPFExtension
  fullName: CasualTasker.Infrastructure.WPFExtension
  nameWithType: CasualTasker.Infrastructure.WPFExtension
- uid: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter
  name: ColorToHexConverter
  href: api/CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.html
  commentId: T:CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter
  fullName: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter
  nameWithType: ColorToHexConverter
- uid: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.Convert(System.Object,Type,System.Object,System.Globalization.CultureInfo)
  name: Convert(Object, Type, Object, CultureInfo)
  href: api/CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.html#CasualTasker_Infrastructure_WPFExtension_ColorToHexConverter_Convert_System_Object_Type_System_Object_System_Globalization_CultureInfo_
  commentId: M:CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.Convert(System.Object,Type,System.Object,System.Globalization.CultureInfo)
  fullName: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.Convert(System.Object, Type, System.Object, System.Globalization.CultureInfo)
  nameWithType: ColorToHexConverter.Convert(Object, Type, Object, CultureInfo)
- uid: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.Convert*
  name: Convert
  href: api/CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.html#CasualTasker_Infrastructure_WPFExtension_ColorToHexConverter_Convert_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.Convert
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.Convert
  nameWithType: ColorToHexConverter.Convert
- uid: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.ConvertBack(System.Object,Type,System.Object,System.Globalization.CultureInfo)
  name: ConvertBack(Object, Type, Object, CultureInfo)
  href: api/CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.html#CasualTasker_Infrastructure_WPFExtension_ColorToHexConverter_ConvertBack_System_Object_Type_System_Object_System_Globalization_CultureInfo_
  commentId: M:CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.ConvertBack(System.Object,Type,System.Object,System.Globalization.CultureInfo)
  fullName: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.ConvertBack(System.Object, Type, System.Object, System.Globalization.CultureInfo)
  nameWithType: ColorToHexConverter.ConvertBack(Object, Type, Object, CultureInfo)
- uid: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.ConvertBack*
  name: ConvertBack
  href: api/CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.html#CasualTasker_Infrastructure_WPFExtension_ColorToHexConverter_ConvertBack_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.ConvertBack
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.ColorToHexConverter.ConvertBack
  nameWithType: ColorToHexConverter.ConvertBack
- uid: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension
  name: EnumCollectionExtension
  href: api/CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.html
  commentId: T:CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension
  fullName: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension
  nameWithType: EnumCollectionExtension
- uid: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.#ctor(Type)
  name: EnumCollectionExtension(Type)
  href: api/CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_EnumCollectionExtension__ctor_Type_
  commentId: M:CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.#ctor(Type)
  fullName: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumCollectionExtension(Type)
  nameWithType: EnumCollectionExtension.EnumCollectionExtension(Type)
- uid: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.#ctor*
  name: EnumCollectionExtension
  href: api/CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_EnumCollectionExtension__ctor_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.#ctor
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumCollectionExtension
  nameWithType: EnumCollectionExtension.EnumCollectionExtension
- uid: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumType
  name: EnumType
  href: api/CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_EnumCollectionExtension_EnumType
  commentId: P:CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumType
  fullName: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumType
  nameWithType: EnumCollectionExtension.EnumType
- uid: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumType*
  name: EnumType
  href: api/CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_EnumCollectionExtension_EnumType_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumType
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.EnumType
  nameWithType: EnumCollectionExtension.EnumType
- uid: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.ProvideValue(IServiceProvider)
  name: ProvideValue(IServiceProvider)
  href: api/CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_EnumCollectionExtension_ProvideValue_IServiceProvider_
  commentId: M:CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.ProvideValue(IServiceProvider)
  fullName: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.ProvideValue(IServiceProvider)
  nameWithType: EnumCollectionExtension.ProvideValue(IServiceProvider)
- uid: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.ProvideValue*
  name: ProvideValue
  href: api/CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_EnumCollectionExtension_ProvideValue_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.ProvideValue
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.EnumCollectionExtension.ProvideValue
  nameWithType: EnumCollectionExtension.ProvideValue
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension
  name: ObservableCollectionExtension
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html
  commentId: T:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension
  nameWithType: ObservableCollectionExtension
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRange*
  name: AddRange
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_AddRange_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRange
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRange
  nameWithType: ObservableCollectionExtension.AddRange
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRange``1(System.Collections.ObjectModel.ObservableCollection{``0},IEnumerable{``0})
  name: AddRange<T>(ObservableCollection<T>, IEnumerable<T>)
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_AddRange__1_System_Collections_ObjectModel_ObservableCollection___0__IEnumerable___0__
  commentId: M:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRange``1(System.Collections.ObjectModel.ObservableCollection{``0},IEnumerable{``0})
  name.vb: AddRange(Of T)(ObservableCollection(Of T), IEnumerable(Of T))
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRange<T>(System.Collections.ObjectModel.ObservableCollection<T>, IEnumerable<T>)
  fullName.vb: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRange(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), IEnumerable(Of T))
  nameWithType: ObservableCollectionExtension.AddRange<T>(ObservableCollection<T>, IEnumerable<T>)
  nameWithType.vb: ObservableCollectionExtension.AddRange(Of T)(ObservableCollection(Of T), IEnumerable(Of T))
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRangeWithClear*
  name: AddRangeWithClear
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_AddRangeWithClear_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRangeWithClear
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRangeWithClear
  nameWithType: ObservableCollectionExtension.AddRangeWithClear
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRangeWithClear``1(System.Collections.ObjectModel.ObservableCollection{``0},IEnumerable{``0})
  name: AddRangeWithClear<T>(ObservableCollection<T>, IEnumerable<T>)
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_AddRangeWithClear__1_System_Collections_ObjectModel_ObservableCollection___0__IEnumerable___0__
  commentId: M:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRangeWithClear``1(System.Collections.ObjectModel.ObservableCollection{``0},IEnumerable{``0})
  name.vb: AddRangeWithClear(Of T)(ObservableCollection(Of T), IEnumerable(Of T))
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRangeWithClear<T>(System.Collections.ObjectModel.ObservableCollection<T>, IEnumerable<T>)
  fullName.vb: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.AddRangeWithClear(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), IEnumerable(Of T))
  nameWithType: ObservableCollectionExtension.AddRangeWithClear<T>(ObservableCollection<T>, IEnumerable<T>)
  nameWithType.vb: ObservableCollectionExtension.AddRangeWithClear(Of T)(ObservableCollection(Of T), IEnumerable(Of T))
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem*
  name: FindItem
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_FindItem_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem
  nameWithType: ObservableCollectionExtension.FindItem
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem``1(System.Collections.ObjectModel.ObservableCollection{``0},``0)
  name: FindItem<T>(ObservableCollection<T>, T)
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_FindItem__1_System_Collections_ObjectModel_ObservableCollection___0____0_
  commentId: M:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem``1(System.Collections.ObjectModel.ObservableCollection{``0},``0)
  name.vb: FindItem(Of T)(ObservableCollection(Of T), T)
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem<T>(System.Collections.ObjectModel.ObservableCollection<T>, T)
  fullName.vb: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), T)
  nameWithType: ObservableCollectionExtension.FindItem<T>(ObservableCollection<T>, T)
  nameWithType.vb: ObservableCollectionExtension.FindItem(Of T)(ObservableCollection(Of T), T)
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Int32)
  name: FindItem<T>(ObservableCollection<T>, Int32)
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_FindItem__1_System_Collections_ObjectModel_ObservableCollection___0__System_Int32_
  commentId: M:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Int32)
  name.vb: FindItem(Of T)(ObservableCollection(Of T), Int32)
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem<T>(System.Collections.ObjectModel.ObservableCollection<T>, System.Int32)
  fullName.vb: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.FindItem(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), System.Int32)
  nameWithType: ObservableCollectionExtension.FindItem<T>(ObservableCollection<T>, Int32)
  nameWithType.vb: ObservableCollectionExtension.FindItem(Of T)(ObservableCollection(Of T), Int32)
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.UpdateView*
  name: UpdateView
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_UpdateView_
  commentId: Overload:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.UpdateView
  isSpec: "True"
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.UpdateView
  nameWithType: ObservableCollectionExtension.UpdateView
- uid: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.UpdateView``1(System.Collections.ObjectModel.ObservableCollection{``0})
  name: UpdateView<T>(ObservableCollection<T>)
  href: api/CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.html#CasualTasker_Infrastructure_WPFExtension_ObservableCollectionExtension_UpdateView__1_System_Collections_ObjectModel_ObservableCollection___0__
  commentId: M:CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.UpdateView``1(System.Collections.ObjectModel.ObservableCollection{``0})
  name.vb: UpdateView(Of T)(ObservableCollection(Of T))
  fullName: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.UpdateView<T>(System.Collections.ObjectModel.ObservableCollection<T>)
  fullName.vb: CasualTasker.Infrastructure.WPFExtension.ObservableCollectionExtension.UpdateView(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T))
  nameWithType: ObservableCollectionExtension.UpdateView<T>(ObservableCollection<T>)
  nameWithType.vb: ObservableCollectionExtension.UpdateView(Of T)(ObservableCollection(Of T))
- uid: CasualTasker.MainWindow
  name: MainWindow
  href: api/CasualTasker.MainWindow.html
  commentId: T:CasualTasker.MainWindow
  fullName: CasualTasker.MainWindow
  nameWithType: MainWindow
- uid: CasualTasker.MainWindow.#ctor
  name: MainWindow()
  href: api/CasualTasker.MainWindow.html#CasualTasker_MainWindow__ctor
  commentId: M:CasualTasker.MainWindow.#ctor
  fullName: CasualTasker.MainWindow.MainWindow()
  nameWithType: MainWindow.MainWindow()
- uid: CasualTasker.MainWindow.#ctor*
  name: MainWindow
  href: api/CasualTasker.MainWindow.html#CasualTasker_MainWindow__ctor_
  commentId: Overload:CasualTasker.MainWindow.#ctor
  isSpec: "True"
  fullName: CasualTasker.MainWindow.MainWindow
  nameWithType: MainWindow.MainWindow
- uid: CasualTasker.MainWindow.InitializeComponent
  name: InitializeComponent()
  href: api/CasualTasker.MainWindow.html#CasualTasker_MainWindow_InitializeComponent
  commentId: M:CasualTasker.MainWindow.InitializeComponent
  fullName: CasualTasker.MainWindow.InitializeComponent()
  nameWithType: MainWindow.InitializeComponent()
- uid: CasualTasker.MainWindow.InitializeComponent*
  name: InitializeComponent
  href: api/CasualTasker.MainWindow.html#CasualTasker_MainWindow_InitializeComponent_
  commentId: Overload:CasualTasker.MainWindow.InitializeComponent
  isSpec: "True"
  fullName: CasualTasker.MainWindow.InitializeComponent
  nameWithType: MainWindow.InitializeComponent
- uid: CasualTasker.Services.Fallbacks
  name: CasualTasker.Services.Fallbacks
  href: api/CasualTasker.Services.Fallbacks.html
  commentId: N:CasualTasker.Services.Fallbacks
  fullName: CasualTasker.Services.Fallbacks
  nameWithType: CasualTasker.Services.Fallbacks
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService
  name: CategoryFallbackService
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html
  commentId: T:CasualTasker.Services.Fallbacks.CategoryFallbackService
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService
  nameWithType: CategoryFallbackService
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext)
  name: CategoryFallbackService(CasualTaskerDbContext)
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService__ctor_CasualTasker_Database_Context_CasualTaskerDbContext_
  commentId: M:CasualTasker.Services.Fallbacks.CategoryFallbackService.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext)
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.CategoryFallbackService(CasualTasker.Database.Context.CasualTaskerDbContext)
  nameWithType: CategoryFallbackService.CategoryFallbackService(CasualTaskerDbContext)
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.#ctor*
  name: CategoryFallbackService
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService__ctor_
  commentId: Overload:CasualTasker.Services.Fallbacks.CategoryFallbackService.#ctor
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.CategoryFallbackService
  nameWithType: CategoryFallbackService.CategoryFallbackService
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategory
  name: CommonCategory
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_CommonCategory
  commentId: P:CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategory
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategory
  nameWithType: CategoryFallbackService.CommonCategory
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategory*
  name: CommonCategory
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_CommonCategory_
  commentId: Overload:CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategory
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategory
  nameWithType: CategoryFallbackService.CommonCategory
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategoryName
  name: CommonCategoryName
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_CommonCategoryName
  commentId: P:CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategoryName
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategoryName
  nameWithType: CategoryFallbackService.CommonCategoryName
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategoryName*
  name: CommonCategoryName
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_CommonCategoryName_
  commentId: Overload:CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategoryName
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.CommonCategoryName
  nameWithType: CategoryFallbackService.CommonCategoryName
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategory
  name: DeletedCategory
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_DeletedCategory
  commentId: P:CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategory
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategory
  nameWithType: CategoryFallbackService.DeletedCategory
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategory*
  name: DeletedCategory
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_DeletedCategory_
  commentId: Overload:CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategory
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategory
  nameWithType: CategoryFallbackService.DeletedCategory
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategoryName
  name: DeletedCategoryName
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_DeletedCategoryName
  commentId: P:CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategoryName
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategoryName
  nameWithType: CategoryFallbackService.DeletedCategoryName
- uid: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategoryName*
  name: DeletedCategoryName
  href: api/CasualTasker.Services.Fallbacks.CategoryFallbackService.html#CasualTasker_Services_Fallbacks_CategoryFallbackService_DeletedCategoryName_
  commentId: Overload:CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategoryName
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.CategoryFallbackService.DeletedCategoryName
  nameWithType: CategoryFallbackService.DeletedCategoryName
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService
  name: ICategoryFallbackService
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html
  commentId: T:CasualTasker.Services.Fallbacks.ICategoryFallbackService
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService
  nameWithType: ICategoryFallbackService
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategory
  name: CommonCategory
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_CommonCategory
  commentId: P:CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategory
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategory
  nameWithType: ICategoryFallbackService.CommonCategory
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategory*
  name: CommonCategory
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_CommonCategory_
  commentId: Overload:CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategory
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategory
  nameWithType: ICategoryFallbackService.CommonCategory
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategoryName
  name: CommonCategoryName
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_CommonCategoryName
  commentId: P:CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategoryName
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategoryName
  nameWithType: ICategoryFallbackService.CommonCategoryName
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategoryName*
  name: CommonCategoryName
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_CommonCategoryName_
  commentId: Overload:CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategoryName
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.CommonCategoryName
  nameWithType: ICategoryFallbackService.CommonCategoryName
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategory
  name: DeletedCategory
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_DeletedCategory
  commentId: P:CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategory
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategory
  nameWithType: ICategoryFallbackService.DeletedCategory
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategory*
  name: DeletedCategory
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_DeletedCategory_
  commentId: Overload:CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategory
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategory
  nameWithType: ICategoryFallbackService.DeletedCategory
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategoryName
  name: DeletedCategoryName
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_DeletedCategoryName
  commentId: P:CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategoryName
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategoryName
  nameWithType: ICategoryFallbackService.DeletedCategoryName
- uid: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategoryName*
  name: DeletedCategoryName
  href: api/CasualTasker.Services.Fallbacks.ICategoryFallbackService.html#CasualTasker_Services_Fallbacks_ICategoryFallbackService_DeletedCategoryName_
  commentId: Overload:CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategoryName
  isSpec: "True"
  fullName: CasualTasker.Services.Fallbacks.ICategoryFallbackService.DeletedCategoryName
  nameWithType: ICategoryFallbackService.DeletedCategoryName
- uid: CasualTasker.Services.Stores
  name: CasualTasker.Services.Stores
  href: api/CasualTasker.Services.Stores.html
  commentId: N:CasualTasker.Services.Stores
  fullName: CasualTasker.Services.Stores
  nameWithType: CasualTasker.Services.Stores
- uid: CasualTasker.Services.Stores.CategoryStore
  name: CategoryStore
  href: api/CasualTasker.Services.Stores.CategoryStore.html
  commentId: T:CasualTasker.Services.Stores.CategoryStore
  fullName: CasualTasker.Services.Stores.CategoryStore
  nameWithType: CategoryStore
- uid: CasualTasker.Services.Stores.CategoryStore.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext,Microsoft.Extensions.Logging.ILogger{CasualTasker.Services.Stores.CategoryStore},CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  name: CategoryStore(CasualTaskerDbContext, ILogger<CategoryStore>, ICategoryFallbackService)
  href: api/CasualTasker.Services.Stores.CategoryStore.html#CasualTasker_Services_Stores_CategoryStore__ctor_CasualTasker_Database_Context_CasualTaskerDbContext_Microsoft_Extensions_Logging_ILogger_CasualTasker_Services_Stores_CategoryStore__CasualTasker_Services_Fallbacks_ICategoryFallbackService_
  commentId: M:CasualTasker.Services.Stores.CategoryStore.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext,Microsoft.Extensions.Logging.ILogger{CasualTasker.Services.Stores.CategoryStore},CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  name.vb: CategoryStore(CasualTaskerDbContext, ILogger(Of CategoryStore), ICategoryFallbackService)
  fullName: CasualTasker.Services.Stores.CategoryStore.CategoryStore(CasualTasker.Database.Context.CasualTaskerDbContext, Microsoft.Extensions.Logging.ILogger<CasualTasker.Services.Stores.CategoryStore>, CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  fullName.vb: CasualTasker.Services.Stores.CategoryStore.CategoryStore(CasualTasker.Database.Context.CasualTaskerDbContext, Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Services.Stores.CategoryStore), CasualTasker.Services.Fallbacks.ICategoryFallbackService)
  nameWithType: CategoryStore.CategoryStore(CasualTaskerDbContext, ILogger<CategoryStore>, ICategoryFallbackService)
  nameWithType.vb: CategoryStore.CategoryStore(CasualTaskerDbContext, ILogger(Of CategoryStore), ICategoryFallbackService)
- uid: CasualTasker.Services.Stores.CategoryStore.#ctor*
  name: CategoryStore
  href: api/CasualTasker.Services.Stores.CategoryStore.html#CasualTasker_Services_Stores_CategoryStore__ctor_
  commentId: Overload:CasualTasker.Services.Stores.CategoryStore.#ctor
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.CategoryStore.CategoryStore
  nameWithType: CategoryStore.CategoryStore
- uid: CasualTasker.Services.Stores.CategoryStore.Delete(System.Int32)
  name: Delete(Int32)
  href: api/CasualTasker.Services.Stores.CategoryStore.html#CasualTasker_Services_Stores_CategoryStore_Delete_System_Int32_
  commentId: M:CasualTasker.Services.Stores.CategoryStore.Delete(System.Int32)
  fullName: CasualTasker.Services.Stores.CategoryStore.Delete(System.Int32)
  nameWithType: CategoryStore.Delete(Int32)
- uid: CasualTasker.Services.Stores.CategoryStore.Delete*
  name: Delete
  href: api/CasualTasker.Services.Stores.CategoryStore.html#CasualTasker_Services_Stores_CategoryStore_Delete_
  commentId: Overload:CasualTasker.Services.Stores.CategoryStore.Delete
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.CategoryStore.Delete
  nameWithType: CategoryStore.Delete
- uid: CasualTasker.Services.Stores.CategoryStore.DeleteAsync(System.Int32)
  name: DeleteAsync(Int32)
  href: api/CasualTasker.Services.Stores.CategoryStore.html#CasualTasker_Services_Stores_CategoryStore_DeleteAsync_System_Int32_
  commentId: M:CasualTasker.Services.Stores.CategoryStore.DeleteAsync(System.Int32)
  fullName: CasualTasker.Services.Stores.CategoryStore.DeleteAsync(System.Int32)
  nameWithType: CategoryStore.DeleteAsync(Int32)
- uid: CasualTasker.Services.Stores.CategoryStore.DeleteAsync*
  name: DeleteAsync
  href: api/CasualTasker.Services.Stores.CategoryStore.html#CasualTasker_Services_Stores_CategoryStore_DeleteAsync_
  commentId: Overload:CasualTasker.Services.Stores.CategoryStore.DeleteAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.CategoryStore.DeleteAsync
  nameWithType: CategoryStore.DeleteAsync
- uid: CasualTasker.Services.Stores.DbStore`1
  name: DbStore<TEntity>
  href: api/CasualTasker.Services.Stores.DbStore-1.html
  commentId: T:CasualTasker.Services.Stores.DbStore`1
  name.vb: DbStore(Of TEntity)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity)
  nameWithType: DbStore<TEntity>
  nameWithType.vb: DbStore(Of TEntity)
- uid: CasualTasker.Services.Stores.DbStore`1.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext,Microsoft.Extensions.Logging.ILogger{CasualTasker.Services.Stores.DbStore{`0}})
  name: DbStore(CasualTaskerDbContext, ILogger<DbStore<TEntity>>)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1__ctor_CasualTasker_Database_Context_CasualTaskerDbContext_Microsoft_Extensions_Logging_ILogger_CasualTasker_Services_Stores_DbStore__0___
  commentId: M:CasualTasker.Services.Stores.DbStore`1.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext,Microsoft.Extensions.Logging.ILogger{CasualTasker.Services.Stores.DbStore{`0}})
  name.vb: DbStore(CasualTaskerDbContext, ILogger(Of DbStore(Of TEntity)))
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.DbStore(CasualTasker.Database.Context.CasualTaskerDbContext, Microsoft.Extensions.Logging.ILogger<CasualTasker.Services.Stores.DbStore<TEntity>>)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).DbStore(CasualTasker.Database.Context.CasualTaskerDbContext, Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Services.Stores.DbStore(Of TEntity)))
  nameWithType: DbStore<TEntity>.DbStore(CasualTaskerDbContext, ILogger<DbStore<TEntity>>)
  nameWithType.vb: DbStore(Of TEntity).DbStore(CasualTaskerDbContext, ILogger(Of DbStore(Of TEntity)))
- uid: CasualTasker.Services.Stores.DbStore`1.#ctor*
  name: DbStore
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1__ctor_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.#ctor
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.DbStore
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).DbStore
  nameWithType: DbStore<TEntity>.DbStore
  nameWithType.vb: DbStore(Of TEntity).DbStore
- uid: CasualTasker.Services.Stores.DbStore`1.Add(`0)
  name: Add(TEntity)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_Add__0_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.Add(`0)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.Add(TEntity)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).Add(TEntity)
  nameWithType: DbStore<TEntity>.Add(TEntity)
  nameWithType.vb: DbStore(Of TEntity).Add(TEntity)
- uid: CasualTasker.Services.Stores.DbStore`1.Add*
  name: Add
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_Add_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.Add
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.Add
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).Add
  nameWithType: DbStore<TEntity>.Add
  nameWithType.vb: DbStore(Of TEntity).Add
- uid: CasualTasker.Services.Stores.DbStore`1.AddAsync(`0)
  name: AddAsync(TEntity)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_AddAsync__0_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.AddAsync(`0)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.AddAsync(TEntity)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).AddAsync(TEntity)
  nameWithType: DbStore<TEntity>.AddAsync(TEntity)
  nameWithType.vb: DbStore(Of TEntity).AddAsync(TEntity)
- uid: CasualTasker.Services.Stores.DbStore`1.AddAsync*
  name: AddAsync
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_AddAsync_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.AddAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.AddAsync
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).AddAsync
  nameWithType: DbStore<TEntity>.AddAsync
  nameWithType.vb: DbStore(Of TEntity).AddAsync
- uid: CasualTasker.Services.Stores.DbStore`1.CheckEntityExist(System.Int32,System.String,System.String)
  name: CheckEntityExist(Int32, String, String)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_CheckEntityExist_System_Int32_System_String_System_String_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.CheckEntityExist(System.Int32,System.String,System.String)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.CheckEntityExist(System.Int32, System.String, System.String)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).CheckEntityExist(System.Int32, System.String, System.String)
  nameWithType: DbStore<TEntity>.CheckEntityExist(Int32, String, String)
  nameWithType.vb: DbStore(Of TEntity).CheckEntityExist(Int32, String, String)
- uid: CasualTasker.Services.Stores.DbStore`1.CheckEntityExist*
  name: CheckEntityExist
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_CheckEntityExist_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.CheckEntityExist
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.CheckEntityExist
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).CheckEntityExist
  nameWithType: DbStore<TEntity>.CheckEntityExist
  nameWithType.vb: DbStore(Of TEntity).CheckEntityExist
- uid: CasualTasker.Services.Stores.DbStore`1.ClearTracker
  name: ClearTracker()
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_ClearTracker
  commentId: M:CasualTasker.Services.Stores.DbStore`1.ClearTracker
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.ClearTracker()
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).ClearTracker()
  nameWithType: DbStore<TEntity>.ClearTracker()
  nameWithType.vb: DbStore(Of TEntity).ClearTracker()
- uid: CasualTasker.Services.Stores.DbStore`1.ClearTracker*
  name: ClearTracker
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_ClearTracker_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.ClearTracker
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.ClearTracker
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).ClearTracker
  nameWithType: DbStore<TEntity>.ClearTracker
  nameWithType.vb: DbStore(Of TEntity).ClearTracker
- uid: CasualTasker.Services.Stores.DbStore`1.Delete(System.Int32)
  name: Delete(Int32)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_Delete_System_Int32_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.Delete(System.Int32)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.Delete(System.Int32)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).Delete(System.Int32)
  nameWithType: DbStore<TEntity>.Delete(Int32)
  nameWithType.vb: DbStore(Of TEntity).Delete(Int32)
- uid: CasualTasker.Services.Stores.DbStore`1.Delete*
  name: Delete
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_Delete_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.Delete
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.Delete
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).Delete
  nameWithType: DbStore<TEntity>.Delete
  nameWithType.vb: DbStore(Of TEntity).Delete
- uid: CasualTasker.Services.Stores.DbStore`1.DeleteAsync(System.Int32)
  name: DeleteAsync(Int32)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_DeleteAsync_System_Int32_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.DeleteAsync(System.Int32)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.DeleteAsync(System.Int32)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).DeleteAsync(System.Int32)
  nameWithType: DbStore<TEntity>.DeleteAsync(Int32)
  nameWithType.vb: DbStore(Of TEntity).DeleteAsync(Int32)
- uid: CasualTasker.Services.Stores.DbStore`1.DeleteAsync*
  name: DeleteAsync
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_DeleteAsync_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.DeleteAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.DeleteAsync
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).DeleteAsync
  nameWithType: DbStore<TEntity>.DeleteAsync
  nameWithType.vb: DbStore(Of TEntity).DeleteAsync
- uid: CasualTasker.Services.Stores.DbStore`1.GetAll
  name: GetAll()
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_GetAll
  commentId: M:CasualTasker.Services.Stores.DbStore`1.GetAll
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.GetAll()
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).GetAll()
  nameWithType: DbStore<TEntity>.GetAll()
  nameWithType.vb: DbStore(Of TEntity).GetAll()
- uid: CasualTasker.Services.Stores.DbStore`1.GetAll*
  name: GetAll
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_GetAll_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.GetAll
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.GetAll
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).GetAll
  nameWithType: DbStore<TEntity>.GetAll
  nameWithType.vb: DbStore(Of TEntity).GetAll
- uid: CasualTasker.Services.Stores.DbStore`1.GetById(System.Int32)
  name: GetById(Int32)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_GetById_System_Int32_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.GetById(System.Int32)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.GetById(System.Int32)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).GetById(System.Int32)
  nameWithType: DbStore<TEntity>.GetById(Int32)
  nameWithType.vb: DbStore(Of TEntity).GetById(Int32)
- uid: CasualTasker.Services.Stores.DbStore`1.GetById*
  name: GetById
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_GetById_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.GetById
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.GetById
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).GetById
  nameWithType: DbStore<TEntity>.GetById
  nameWithType.vb: DbStore(Of TEntity).GetById
- uid: CasualTasker.Services.Stores.DbStore`1.Update(`0)
  name: Update(TEntity)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_Update__0_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.Update(`0)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.Update(TEntity)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).Update(TEntity)
  nameWithType: DbStore<TEntity>.Update(TEntity)
  nameWithType.vb: DbStore(Of TEntity).Update(TEntity)
- uid: CasualTasker.Services.Stores.DbStore`1.Update*
  name: Update
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_Update_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.Update
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.Update
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).Update
  nameWithType: DbStore<TEntity>.Update
  nameWithType.vb: DbStore(Of TEntity).Update
- uid: CasualTasker.Services.Stores.DbStore`1.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_UpdateAsync__0_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.UpdateAsync(`0)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.UpdateAsync(TEntity)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).UpdateAsync(TEntity)
  nameWithType: DbStore<TEntity>.UpdateAsync(TEntity)
  nameWithType.vb: DbStore(Of TEntity).UpdateAsync(TEntity)
- uid: CasualTasker.Services.Stores.DbStore`1.UpdateAsync*
  name: UpdateAsync
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_UpdateAsync_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.UpdateAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.UpdateAsync
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).UpdateAsync
  nameWithType: DbStore<TEntity>.UpdateAsync
  nameWithType.vb: DbStore(Of TEntity).UpdateAsync
- uid: CasualTasker.Services.Stores.DbStore`1.ValidationEntityWithException(`0,System.String,System.String)
  name: ValidationEntityWithException(TEntity, String, String)
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_ValidationEntityWithException__0_System_String_System_String_
  commentId: M:CasualTasker.Services.Stores.DbStore`1.ValidationEntityWithException(`0,System.String,System.String)
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.ValidationEntityWithException(TEntity, System.String, System.String)
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).ValidationEntityWithException(TEntity, System.String, System.String)
  nameWithType: DbStore<TEntity>.ValidationEntityWithException(TEntity, String, String)
  nameWithType.vb: DbStore(Of TEntity).ValidationEntityWithException(TEntity, String, String)
- uid: CasualTasker.Services.Stores.DbStore`1.ValidationEntityWithException*
  name: ValidationEntityWithException
  href: api/CasualTasker.Services.Stores.DbStore-1.html#CasualTasker_Services_Stores_DbStore_1_ValidationEntityWithException_
  commentId: Overload:CasualTasker.Services.Stores.DbStore`1.ValidationEntityWithException
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.DbStore<TEntity>.ValidationEntityWithException
  fullName.vb: CasualTasker.Services.Stores.DbStore(Of TEntity).ValidationEntityWithException
  nameWithType: DbStore<TEntity>.ValidationEntityWithException
  nameWithType.vb: DbStore(Of TEntity).ValidationEntityWithException
- uid: CasualTasker.Services.Stores.IStore`1
  name: IStore<TEntity>
  href: api/CasualTasker.Services.Stores.IStore-1.html
  commentId: T:CasualTasker.Services.Stores.IStore`1
  name.vb: IStore(Of TEntity)
  fullName: CasualTasker.Services.Stores.IStore<TEntity>
  fullName.vb: CasualTasker.Services.Stores.IStore(Of TEntity)
  nameWithType: IStore<TEntity>
  nameWithType.vb: IStore(Of TEntity)
- uid: CasualTasker.Services.Stores.IStore`1.GetAll
  name: GetAll()
  href: api/CasualTasker.Services.Stores.IStore-1.html#CasualTasker_Services_Stores_IStore_1_GetAll
  commentId: M:CasualTasker.Services.Stores.IStore`1.GetAll
  fullName: CasualTasker.Services.Stores.IStore<TEntity>.GetAll()
  fullName.vb: CasualTasker.Services.Stores.IStore(Of TEntity).GetAll()
  nameWithType: IStore<TEntity>.GetAll()
  nameWithType.vb: IStore(Of TEntity).GetAll()
- uid: CasualTasker.Services.Stores.IStore`1.GetAll*
  name: GetAll
  href: api/CasualTasker.Services.Stores.IStore-1.html#CasualTasker_Services_Stores_IStore_1_GetAll_
  commentId: Overload:CasualTasker.Services.Stores.IStore`1.GetAll
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStore<TEntity>.GetAll
  fullName.vb: CasualTasker.Services.Stores.IStore(Of TEntity).GetAll
  nameWithType: IStore<TEntity>.GetAll
  nameWithType.vb: IStore(Of TEntity).GetAll
- uid: CasualTasker.Services.Stores.IStore`1.GetById(System.Int32)
  name: GetById(Int32)
  href: api/CasualTasker.Services.Stores.IStore-1.html#CasualTasker_Services_Stores_IStore_1_GetById_System_Int32_
  commentId: M:CasualTasker.Services.Stores.IStore`1.GetById(System.Int32)
  fullName: CasualTasker.Services.Stores.IStore<TEntity>.GetById(System.Int32)
  fullName.vb: CasualTasker.Services.Stores.IStore(Of TEntity).GetById(System.Int32)
  nameWithType: IStore<TEntity>.GetById(Int32)
  nameWithType.vb: IStore(Of TEntity).GetById(Int32)
- uid: CasualTasker.Services.Stores.IStore`1.GetById*
  name: GetById
  href: api/CasualTasker.Services.Stores.IStore-1.html#CasualTasker_Services_Stores_IStore_1_GetById_
  commentId: Overload:CasualTasker.Services.Stores.IStore`1.GetById
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStore<TEntity>.GetById
  fullName.vb: CasualTasker.Services.Stores.IStore(Of TEntity).GetById
  nameWithType: IStore<TEntity>.GetById
  nameWithType.vb: IStore(Of TEntity).GetById
- uid: CasualTasker.Services.Stores.IStoreAsync`1
  name: IStoreAsync<TEntity>
  href: api/CasualTasker.Services.Stores.IStoreAsync-1.html
  commentId: T:CasualTasker.Services.Stores.IStoreAsync`1
  name.vb: IStoreAsync(Of TEntity)
  fullName: CasualTasker.Services.Stores.IStoreAsync<TEntity>
  fullName.vb: CasualTasker.Services.Stores.IStoreAsync(Of TEntity)
  nameWithType: IStoreAsync<TEntity>
  nameWithType.vb: IStoreAsync(Of TEntity)
- uid: CasualTasker.Services.Stores.IStoreAsync`1.AddAsync(`0)
  name: AddAsync(TEntity)
  href: api/CasualTasker.Services.Stores.IStoreAsync-1.html#CasualTasker_Services_Stores_IStoreAsync_1_AddAsync__0_
  commentId: M:CasualTasker.Services.Stores.IStoreAsync`1.AddAsync(`0)
  fullName: CasualTasker.Services.Stores.IStoreAsync<TEntity>.AddAsync(TEntity)
  fullName.vb: CasualTasker.Services.Stores.IStoreAsync(Of TEntity).AddAsync(TEntity)
  nameWithType: IStoreAsync<TEntity>.AddAsync(TEntity)
  nameWithType.vb: IStoreAsync(Of TEntity).AddAsync(TEntity)
- uid: CasualTasker.Services.Stores.IStoreAsync`1.AddAsync*
  name: AddAsync
  href: api/CasualTasker.Services.Stores.IStoreAsync-1.html#CasualTasker_Services_Stores_IStoreAsync_1_AddAsync_
  commentId: Overload:CasualTasker.Services.Stores.IStoreAsync`1.AddAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStoreAsync<TEntity>.AddAsync
  fullName.vb: CasualTasker.Services.Stores.IStoreAsync(Of TEntity).AddAsync
  nameWithType: IStoreAsync<TEntity>.AddAsync
  nameWithType.vb: IStoreAsync(Of TEntity).AddAsync
- uid: CasualTasker.Services.Stores.IStoreAsync`1.DeleteAsync(System.Int32)
  name: DeleteAsync(Int32)
  href: api/CasualTasker.Services.Stores.IStoreAsync-1.html#CasualTasker_Services_Stores_IStoreAsync_1_DeleteAsync_System_Int32_
  commentId: M:CasualTasker.Services.Stores.IStoreAsync`1.DeleteAsync(System.Int32)
  fullName: CasualTasker.Services.Stores.IStoreAsync<TEntity>.DeleteAsync(System.Int32)
  fullName.vb: CasualTasker.Services.Stores.IStoreAsync(Of TEntity).DeleteAsync(System.Int32)
  nameWithType: IStoreAsync<TEntity>.DeleteAsync(Int32)
  nameWithType.vb: IStoreAsync(Of TEntity).DeleteAsync(Int32)
- uid: CasualTasker.Services.Stores.IStoreAsync`1.DeleteAsync*
  name: DeleteAsync
  href: api/CasualTasker.Services.Stores.IStoreAsync-1.html#CasualTasker_Services_Stores_IStoreAsync_1_DeleteAsync_
  commentId: Overload:CasualTasker.Services.Stores.IStoreAsync`1.DeleteAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStoreAsync<TEntity>.DeleteAsync
  fullName.vb: CasualTasker.Services.Stores.IStoreAsync(Of TEntity).DeleteAsync
  nameWithType: IStoreAsync<TEntity>.DeleteAsync
  nameWithType.vb: IStoreAsync(Of TEntity).DeleteAsync
- uid: CasualTasker.Services.Stores.IStoreAsync`1.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/CasualTasker.Services.Stores.IStoreAsync-1.html#CasualTasker_Services_Stores_IStoreAsync_1_UpdateAsync__0_
  commentId: M:CasualTasker.Services.Stores.IStoreAsync`1.UpdateAsync(`0)
  fullName: CasualTasker.Services.Stores.IStoreAsync<TEntity>.UpdateAsync(TEntity)
  fullName.vb: CasualTasker.Services.Stores.IStoreAsync(Of TEntity).UpdateAsync(TEntity)
  nameWithType: IStoreAsync<TEntity>.UpdateAsync(TEntity)
  nameWithType.vb: IStoreAsync(Of TEntity).UpdateAsync(TEntity)
- uid: CasualTasker.Services.Stores.IStoreAsync`1.UpdateAsync*
  name: UpdateAsync
  href: api/CasualTasker.Services.Stores.IStoreAsync-1.html#CasualTasker_Services_Stores_IStoreAsync_1_UpdateAsync_
  commentId: Overload:CasualTasker.Services.Stores.IStoreAsync`1.UpdateAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStoreAsync<TEntity>.UpdateAsync
  fullName.vb: CasualTasker.Services.Stores.IStoreAsync(Of TEntity).UpdateAsync
  nameWithType: IStoreAsync<TEntity>.UpdateAsync
  nameWithType.vb: IStoreAsync(Of TEntity).UpdateAsync
- uid: CasualTasker.Services.Stores.IStoreSync`1
  name: IStoreSync<TEntity>
  href: api/CasualTasker.Services.Stores.IStoreSync-1.html
  commentId: T:CasualTasker.Services.Stores.IStoreSync`1
  name.vb: IStoreSync(Of TEntity)
  fullName: CasualTasker.Services.Stores.IStoreSync<TEntity>
  fullName.vb: CasualTasker.Services.Stores.IStoreSync(Of TEntity)
  nameWithType: IStoreSync<TEntity>
  nameWithType.vb: IStoreSync(Of TEntity)
- uid: CasualTasker.Services.Stores.IStoreSync`1.Add(`0)
  name: Add(TEntity)
  href: api/CasualTasker.Services.Stores.IStoreSync-1.html#CasualTasker_Services_Stores_IStoreSync_1_Add__0_
  commentId: M:CasualTasker.Services.Stores.IStoreSync`1.Add(`0)
  fullName: CasualTasker.Services.Stores.IStoreSync<TEntity>.Add(TEntity)
  fullName.vb: CasualTasker.Services.Stores.IStoreSync(Of TEntity).Add(TEntity)
  nameWithType: IStoreSync<TEntity>.Add(TEntity)
  nameWithType.vb: IStoreSync(Of TEntity).Add(TEntity)
- uid: CasualTasker.Services.Stores.IStoreSync`1.Add*
  name: Add
  href: api/CasualTasker.Services.Stores.IStoreSync-1.html#CasualTasker_Services_Stores_IStoreSync_1_Add_
  commentId: Overload:CasualTasker.Services.Stores.IStoreSync`1.Add
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStoreSync<TEntity>.Add
  fullName.vb: CasualTasker.Services.Stores.IStoreSync(Of TEntity).Add
  nameWithType: IStoreSync<TEntity>.Add
  nameWithType.vb: IStoreSync(Of TEntity).Add
- uid: CasualTasker.Services.Stores.IStoreSync`1.Delete(System.Int32)
  name: Delete(Int32)
  href: api/CasualTasker.Services.Stores.IStoreSync-1.html#CasualTasker_Services_Stores_IStoreSync_1_Delete_System_Int32_
  commentId: M:CasualTasker.Services.Stores.IStoreSync`1.Delete(System.Int32)
  fullName: CasualTasker.Services.Stores.IStoreSync<TEntity>.Delete(System.Int32)
  fullName.vb: CasualTasker.Services.Stores.IStoreSync(Of TEntity).Delete(System.Int32)
  nameWithType: IStoreSync<TEntity>.Delete(Int32)
  nameWithType.vb: IStoreSync(Of TEntity).Delete(Int32)
- uid: CasualTasker.Services.Stores.IStoreSync`1.Delete*
  name: Delete
  href: api/CasualTasker.Services.Stores.IStoreSync-1.html#CasualTasker_Services_Stores_IStoreSync_1_Delete_
  commentId: Overload:CasualTasker.Services.Stores.IStoreSync`1.Delete
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStoreSync<TEntity>.Delete
  fullName.vb: CasualTasker.Services.Stores.IStoreSync(Of TEntity).Delete
  nameWithType: IStoreSync<TEntity>.Delete
  nameWithType.vb: IStoreSync(Of TEntity).Delete
- uid: CasualTasker.Services.Stores.IStoreSync`1.Update(`0)
  name: Update(TEntity)
  href: api/CasualTasker.Services.Stores.IStoreSync-1.html#CasualTasker_Services_Stores_IStoreSync_1_Update__0_
  commentId: M:CasualTasker.Services.Stores.IStoreSync`1.Update(`0)
  fullName: CasualTasker.Services.Stores.IStoreSync<TEntity>.Update(TEntity)
  fullName.vb: CasualTasker.Services.Stores.IStoreSync(Of TEntity).Update(TEntity)
  nameWithType: IStoreSync<TEntity>.Update(TEntity)
  nameWithType.vb: IStoreSync(Of TEntity).Update(TEntity)
- uid: CasualTasker.Services.Stores.IStoreSync`1.Update*
  name: Update
  href: api/CasualTasker.Services.Stores.IStoreSync-1.html#CasualTasker_Services_Stores_IStoreSync_1_Update_
  commentId: Overload:CasualTasker.Services.Stores.IStoreSync`1.Update
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.IStoreSync<TEntity>.Update
  fullName.vb: CasualTasker.Services.Stores.IStoreSync(Of TEntity).Update
  nameWithType: IStoreSync<TEntity>.Update
  nameWithType.vb: IStoreSync(Of TEntity).Update
- uid: CasualTasker.Services.Stores.TaskStore
  name: TaskStore
  href: api/CasualTasker.Services.Stores.TaskStore.html
  commentId: T:CasualTasker.Services.Stores.TaskStore
  fullName: CasualTasker.Services.Stores.TaskStore
  nameWithType: TaskStore
- uid: CasualTasker.Services.Stores.TaskStore.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext,CasualTasker.Services.Fallbacks.ICategoryFallbackService,Microsoft.Extensions.Logging.ILogger{CasualTasker.Services.Stores.TaskStore})
  name: TaskStore(CasualTaskerDbContext, ICategoryFallbackService, ILogger<TaskStore>)
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore__ctor_CasualTasker_Database_Context_CasualTaskerDbContext_CasualTasker_Services_Fallbacks_ICategoryFallbackService_Microsoft_Extensions_Logging_ILogger_CasualTasker_Services_Stores_TaskStore__
  commentId: M:CasualTasker.Services.Stores.TaskStore.#ctor(CasualTasker.Database.Context.CasualTaskerDbContext,CasualTasker.Services.Fallbacks.ICategoryFallbackService,Microsoft.Extensions.Logging.ILogger{CasualTasker.Services.Stores.TaskStore})
  name.vb: TaskStore(CasualTaskerDbContext, ICategoryFallbackService, ILogger(Of TaskStore))
  fullName: CasualTasker.Services.Stores.TaskStore.TaskStore(CasualTasker.Database.Context.CasualTaskerDbContext, CasualTasker.Services.Fallbacks.ICategoryFallbackService, Microsoft.Extensions.Logging.ILogger<CasualTasker.Services.Stores.TaskStore>)
  fullName.vb: CasualTasker.Services.Stores.TaskStore.TaskStore(CasualTasker.Database.Context.CasualTaskerDbContext, CasualTasker.Services.Fallbacks.ICategoryFallbackService, Microsoft.Extensions.Logging.ILogger(Of CasualTasker.Services.Stores.TaskStore))
  nameWithType: TaskStore.TaskStore(CasualTaskerDbContext, ICategoryFallbackService, ILogger<TaskStore>)
  nameWithType.vb: TaskStore.TaskStore(CasualTaskerDbContext, ICategoryFallbackService, ILogger(Of TaskStore))
- uid: CasualTasker.Services.Stores.TaskStore.#ctor*
  name: TaskStore
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore__ctor_
  commentId: Overload:CasualTasker.Services.Stores.TaskStore.#ctor
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.TaskStore.TaskStore
  nameWithType: TaskStore.TaskStore
- uid: CasualTasker.Services.Stores.TaskStore.Add(CasualTasker.DTO.TaskDTO)
  name: Add(TaskDTO)
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_Add_CasualTasker_DTO_TaskDTO_
  commentId: M:CasualTasker.Services.Stores.TaskStore.Add(CasualTasker.DTO.TaskDTO)
  fullName: CasualTasker.Services.Stores.TaskStore.Add(CasualTasker.DTO.TaskDTO)
  nameWithType: TaskStore.Add(TaskDTO)
- uid: CasualTasker.Services.Stores.TaskStore.Add*
  name: Add
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_Add_
  commentId: Overload:CasualTasker.Services.Stores.TaskStore.Add
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.TaskStore.Add
  nameWithType: TaskStore.Add
- uid: CasualTasker.Services.Stores.TaskStore.AddAsync(CasualTasker.DTO.TaskDTO)
  name: AddAsync(TaskDTO)
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_AddAsync_CasualTasker_DTO_TaskDTO_
  commentId: M:CasualTasker.Services.Stores.TaskStore.AddAsync(CasualTasker.DTO.TaskDTO)
  fullName: CasualTasker.Services.Stores.TaskStore.AddAsync(CasualTasker.DTO.TaskDTO)
  nameWithType: TaskStore.AddAsync(TaskDTO)
- uid: CasualTasker.Services.Stores.TaskStore.AddAsync*
  name: AddAsync
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_AddAsync_
  commentId: Overload:CasualTasker.Services.Stores.TaskStore.AddAsync
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.TaskStore.AddAsync
  nameWithType: TaskStore.AddAsync
- uid: CasualTasker.Services.Stores.TaskStore.GetAll
  name: GetAll()
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_GetAll
  commentId: M:CasualTasker.Services.Stores.TaskStore.GetAll
  fullName: CasualTasker.Services.Stores.TaskStore.GetAll()
  nameWithType: TaskStore.GetAll()
- uid: CasualTasker.Services.Stores.TaskStore.GetAll*
  name: GetAll
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_GetAll_
  commentId: Overload:CasualTasker.Services.Stores.TaskStore.GetAll
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.TaskStore.GetAll
  nameWithType: TaskStore.GetAll
- uid: CasualTasker.Services.Stores.TaskStore.GetById(System.Int32)
  name: GetById(Int32)
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_GetById_System_Int32_
  commentId: M:CasualTasker.Services.Stores.TaskStore.GetById(System.Int32)
  fullName: CasualTasker.Services.Stores.TaskStore.GetById(System.Int32)
  nameWithType: TaskStore.GetById(Int32)
- uid: CasualTasker.Services.Stores.TaskStore.GetById*
  name: GetById
  href: api/CasualTasker.Services.Stores.TaskStore.html#CasualTasker_Services_Stores_TaskStore_GetById_
  commentId: Overload:CasualTasker.Services.Stores.TaskStore.GetById
  isSpec: "True"
  fullName: CasualTasker.Services.Stores.TaskStore.GetById
  nameWithType: TaskStore.GetById
- uid: CasualTasker.ViewModels
  name: CasualTasker.ViewModels
  href: api/CasualTasker.ViewModels.html
  commentId: N:CasualTasker.ViewModels
  fullName: CasualTasker.ViewModels
  nameWithType: CasualTasker.ViewModels
- uid: CasualTasker.ViewModels.Base
  name: CasualTasker.ViewModels.Base
  href: api/CasualTasker.ViewModels.Base.html
  commentId: N:CasualTasker.ViewModels.Base
  fullName: CasualTasker.ViewModels.Base
  nameWithType: CasualTasker.ViewModels.Base
- uid: CasualTasker.ViewModels.Base.ViewModelBase
  name: ViewModelBase
  href: api/CasualTasker.ViewModels.Base.ViewModelBase.html
  commentId: T:CasualTasker.ViewModels.Base.ViewModelBase
  fullName: CasualTasker.ViewModels.Base.ViewModelBase
  nameWithType: ViewModelBase
- uid: CasualTasker.ViewModels.Base.ViewModelBase.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  href: api/CasualTasker.ViewModels.Base.ViewModelBase.html#CasualTasker_ViewModels_Base_ViewModelBase_OnPropertyChanged_System_String_
  commentId: M:CasualTasker.ViewModels.Base.ViewModelBase.OnPropertyChanged(System.String)
  fullName: CasualTasker.ViewModels.Base.ViewModelBase.OnPropertyChanged(System.String)
  nameWithType: ViewModelBase.OnPropertyChanged(String)
- uid: CasualTasker.ViewModels.Base.ViewModelBase.OnPropertyChanged*
  name: OnPropertyChanged
  href: api/CasualTasker.ViewModels.Base.ViewModelBase.html#CasualTasker_ViewModels_Base_ViewModelBase_OnPropertyChanged_
  commentId: Overload:CasualTasker.ViewModels.Base.ViewModelBase.OnPropertyChanged
  isSpec: "True"
  fullName: CasualTasker.ViewModels.Base.ViewModelBase.OnPropertyChanged
  nameWithType: ViewModelBase.OnPropertyChanged
- uid: CasualTasker.ViewModels.Base.ViewModelBase.PropertyChanged
  name: PropertyChanged
  href: api/CasualTasker.ViewModels.Base.ViewModelBase.html#CasualTasker_ViewModels_Base_ViewModelBase_PropertyChanged
  commentId: E:CasualTasker.ViewModels.Base.ViewModelBase.PropertyChanged
  fullName: CasualTasker.ViewModels.Base.ViewModelBase.PropertyChanged
  nameWithType: ViewModelBase.PropertyChanged
- uid: CasualTasker.ViewModels.Base.ViewModelBase.Set*
  name: Set
  href: api/CasualTasker.ViewModels.Base.ViewModelBase.html#CasualTasker_ViewModels_Base_ViewModelBase_Set_
  commentId: Overload:CasualTasker.ViewModels.Base.ViewModelBase.Set
  isSpec: "True"
  fullName: CasualTasker.ViewModels.Base.ViewModelBase.Set
  nameWithType: ViewModelBase.Set
- uid: CasualTasker.ViewModels.Base.ViewModelBase.Set``1(``0@,``0,System.String)
  name: Set<T>(ref T, T, String)
  href: api/CasualTasker.ViewModels.Base.ViewModelBase.html#CasualTasker_ViewModels_Base_ViewModelBase_Set__1___0____0_System_String_
  commentId: M:CasualTasker.ViewModels.Base.ViewModelBase.Set``1(``0@,``0,System.String)
  name.vb: Set(Of T)(ByRef T, T, String)
  fullName: CasualTasker.ViewModels.Base.ViewModelBase.Set<T>(ref T, T, System.String)
  fullName.vb: CasualTasker.ViewModels.Base.ViewModelBase.Set(Of T)(ByRef T, T, System.String)
  nameWithType: ViewModelBase.Set<T>(ref T, T, String)
  nameWithType.vb: ViewModelBase.Set(Of T)(ByRef T, T, String)
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel
  name: EditCategoryPageViewModel
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html
  commentId: T:CasualTasker.ViewModels.EditCategoryPageViewModel
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel
  nameWithType: EditCategoryPageViewModel
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository,Microsoft.Extensions.Logging.ILogger{CasualTasker.ViewModels.EditCategoryPageViewModel})
  name: EditCategoryPageViewModel(DataRepository, ILogger<EditCategoryPageViewModel>)
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel__ctor_CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_Microsoft_Extensions_Logging_ILogger_CasualTasker_ViewModels_EditCategoryPageViewModel__
  commentId: M:CasualTasker.ViewModels.EditCategoryPageViewModel.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository,Microsoft.Extensions.Logging.ILogger{CasualTasker.ViewModels.EditCategoryPageViewModel})
  name.vb: EditCategoryPageViewModel(DataRepository, ILogger(Of EditCategoryPageViewModel))
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategoryPageViewModel(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository, Microsoft.Extensions.Logging.ILogger<CasualTasker.ViewModels.EditCategoryPageViewModel>)
  fullName.vb: CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategoryPageViewModel(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository, Microsoft.Extensions.Logging.ILogger(Of CasualTasker.ViewModels.EditCategoryPageViewModel))
  nameWithType: EditCategoryPageViewModel.EditCategoryPageViewModel(DataRepository, ILogger<EditCategoryPageViewModel>)
  nameWithType.vb: EditCategoryPageViewModel.EditCategoryPageViewModel(DataRepository, ILogger(Of EditCategoryPageViewModel))
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.#ctor*
  name: EditCategoryPageViewModel
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel__ctor_
  commentId: Overload:CasualTasker.ViewModels.EditCategoryPageViewModel.#ctor
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategoryPageViewModel
  nameWithType: EditCategoryPageViewModel.EditCategoryPageViewModel
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.AddCategoryCommand
  name: AddCategoryCommand
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_AddCategoryCommand
  commentId: P:CasualTasker.ViewModels.EditCategoryPageViewModel.AddCategoryCommand
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.AddCategoryCommand
  nameWithType: EditCategoryPageViewModel.AddCategoryCommand
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.AddCategoryCommand*
  name: AddCategoryCommand
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_AddCategoryCommand_
  commentId: Overload:CasualTasker.ViewModels.EditCategoryPageViewModel.AddCategoryCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.AddCategoryCommand
  nameWithType: EditCategoryPageViewModel.AddCategoryCommand
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.Categories
  name: Categories
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_Categories
  commentId: P:CasualTasker.ViewModels.EditCategoryPageViewModel.Categories
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.Categories
  nameWithType: EditCategoryPageViewModel.Categories
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.Categories*
  name: Categories
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_Categories_
  commentId: Overload:CasualTasker.ViewModels.EditCategoryPageViewModel.Categories
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.Categories
  nameWithType: EditCategoryPageViewModel.Categories
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.DeleteCategoryCommand
  name: DeleteCategoryCommand
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_DeleteCategoryCommand
  commentId: P:CasualTasker.ViewModels.EditCategoryPageViewModel.DeleteCategoryCommand
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.DeleteCategoryCommand
  nameWithType: EditCategoryPageViewModel.DeleteCategoryCommand
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.DeleteCategoryCommand*
  name: DeleteCategoryCommand
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_DeleteCategoryCommand_
  commentId: Overload:CasualTasker.ViewModels.EditCategoryPageViewModel.DeleteCategoryCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.DeleteCategoryCommand
  nameWithType: EditCategoryPageViewModel.DeleteCategoryCommand
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategory
  name: EditCategory
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_EditCategory
  commentId: P:CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategory
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategory
  nameWithType: EditCategoryPageViewModel.EditCategory
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategory*
  name: EditCategory
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_EditCategory_
  commentId: Overload:CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategory
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.EditCategory
  nameWithType: EditCategoryPageViewModel.EditCategory
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.SelectedCategory
  name: SelectedCategory
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_SelectedCategory
  commentId: P:CasualTasker.ViewModels.EditCategoryPageViewModel.SelectedCategory
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.SelectedCategory
  nameWithType: EditCategoryPageViewModel.SelectedCategory
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.SelectedCategory*
  name: SelectedCategory
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_SelectedCategory_
  commentId: Overload:CasualTasker.ViewModels.EditCategoryPageViewModel.SelectedCategory
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.SelectedCategory
  nameWithType: EditCategoryPageViewModel.SelectedCategory
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.UpdateCategoryCommand
  name: UpdateCategoryCommand
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_UpdateCategoryCommand
  commentId: P:CasualTasker.ViewModels.EditCategoryPageViewModel.UpdateCategoryCommand
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.UpdateCategoryCommand
  nameWithType: EditCategoryPageViewModel.UpdateCategoryCommand
- uid: CasualTasker.ViewModels.EditCategoryPageViewModel.UpdateCategoryCommand*
  name: UpdateCategoryCommand
  href: api/CasualTasker.ViewModels.EditCategoryPageViewModel.html#CasualTasker_ViewModels_EditCategoryPageViewModel_UpdateCategoryCommand_
  commentId: Overload:CasualTasker.ViewModels.EditCategoryPageViewModel.UpdateCategoryCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditCategoryPageViewModel.UpdateCategoryCommand
  nameWithType: EditCategoryPageViewModel.UpdateCategoryCommand
- uid: CasualTasker.ViewModels.EditTaskPageViewModel
  name: EditTaskPageViewModel
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html
  commentId: T:CasualTasker.ViewModels.EditTaskPageViewModel
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel
  nameWithType: EditTaskPageViewModel
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository,Microsoft.Extensions.Logging.ILogger{CasualTasker.ViewModels.EditTaskPageViewModel})
  name: EditTaskPageViewModel(DataRepository, ILogger<EditTaskPageViewModel>)
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel__ctor_CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_Microsoft_Extensions_Logging_ILogger_CasualTasker_ViewModels_EditTaskPageViewModel__
  commentId: M:CasualTasker.ViewModels.EditTaskPageViewModel.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository,Microsoft.Extensions.Logging.ILogger{CasualTasker.ViewModels.EditTaskPageViewModel})
  name.vb: EditTaskPageViewModel(DataRepository, ILogger(Of EditTaskPageViewModel))
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.EditTaskPageViewModel(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository, Microsoft.Extensions.Logging.ILogger<CasualTasker.ViewModels.EditTaskPageViewModel>)
  fullName.vb: CasualTasker.ViewModels.EditTaskPageViewModel.EditTaskPageViewModel(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository, Microsoft.Extensions.Logging.ILogger(Of CasualTasker.ViewModels.EditTaskPageViewModel))
  nameWithType: EditTaskPageViewModel.EditTaskPageViewModel(DataRepository, ILogger<EditTaskPageViewModel>)
  nameWithType.vb: EditTaskPageViewModel.EditTaskPageViewModel(DataRepository, ILogger(Of EditTaskPageViewModel))
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.#ctor*
  name: EditTaskPageViewModel
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel__ctor_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.#ctor
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.EditTaskPageViewModel
  nameWithType: EditTaskPageViewModel.EditTaskPageViewModel
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.AddTaskCommand
  name: AddTaskCommand
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_AddTaskCommand
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.AddTaskCommand
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.AddTaskCommand
  nameWithType: EditTaskPageViewModel.AddTaskCommand
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.AddTaskCommand*
  name: AddTaskCommand
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_AddTaskCommand_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.AddTaskCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.AddTaskCommand
  nameWithType: EditTaskPageViewModel.AddTaskCommand
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.Categories
  name: Categories
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_Categories
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.Categories
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.Categories
  nameWithType: EditTaskPageViewModel.Categories
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.Categories*
  name: Categories
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_Categories_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.Categories
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.Categories
  nameWithType: EditTaskPageViewModel.Categories
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.DeleteTaskCommand
  name: DeleteTaskCommand
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_DeleteTaskCommand
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.DeleteTaskCommand
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.DeleteTaskCommand
  nameWithType: EditTaskPageViewModel.DeleteTaskCommand
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.DeleteTaskCommand*
  name: DeleteTaskCommand
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_DeleteTaskCommand_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.DeleteTaskCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.DeleteTaskCommand
  nameWithType: EditTaskPageViewModel.DeleteTaskCommand
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.EditTask
  name: EditTask
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_EditTask
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.EditTask
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.EditTask
  nameWithType: EditTaskPageViewModel.EditTask
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.EditTask*
  name: EditTask
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_EditTask_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.EditTask
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.EditTask
  nameWithType: EditTaskPageViewModel.EditTask
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedCategory
  name: SelectedCategory
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_SelectedCategory
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.SelectedCategory
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedCategory
  nameWithType: EditTaskPageViewModel.SelectedCategory
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedCategory*
  name: SelectedCategory
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_SelectedCategory_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.SelectedCategory
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedCategory
  nameWithType: EditTaskPageViewModel.SelectedCategory
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedTask
  name: SelectedTask
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_SelectedTask
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.SelectedTask
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedTask
  nameWithType: EditTaskPageViewModel.SelectedTask
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedTask*
  name: SelectedTask
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_SelectedTask_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.SelectedTask
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.SelectedTask
  nameWithType: EditTaskPageViewModel.SelectedTask
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.Tasks
  name: Tasks
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_Tasks
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.Tasks
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.Tasks
  nameWithType: EditTaskPageViewModel.Tasks
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.Tasks*
  name: Tasks
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_Tasks_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.Tasks
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.Tasks
  nameWithType: EditTaskPageViewModel.Tasks
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.UpdateTaskCommand
  name: UpdateTaskCommand
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_UpdateTaskCommand
  commentId: P:CasualTasker.ViewModels.EditTaskPageViewModel.UpdateTaskCommand
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.UpdateTaskCommand
  nameWithType: EditTaskPageViewModel.UpdateTaskCommand
- uid: CasualTasker.ViewModels.EditTaskPageViewModel.UpdateTaskCommand*
  name: UpdateTaskCommand
  href: api/CasualTasker.ViewModels.EditTaskPageViewModel.html#CasualTasker_ViewModels_EditTaskPageViewModel_UpdateTaskCommand_
  commentId: Overload:CasualTasker.ViewModels.EditTaskPageViewModel.UpdateTaskCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.EditTaskPageViewModel.UpdateTaskCommand
  nameWithType: EditTaskPageViewModel.UpdateTaskCommand
- uid: CasualTasker.ViewModels.MainPageViewModel
  name: MainPageViewModel
  href: api/CasualTasker.ViewModels.MainPageViewModel.html
  commentId: T:CasualTasker.ViewModels.MainPageViewModel
  fullName: CasualTasker.ViewModels.MainPageViewModel
  nameWithType: MainPageViewModel
- uid: CasualTasker.ViewModels.MainPageViewModel.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository,Microsoft.Extensions.Logging.ILogger{CasualTasker.ViewModels.MainPageViewModel})
  name: MainPageViewModel(DataRepository, ILogger<MainPageViewModel>)
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel__ctor_CasualTasker_Infrastructure_ObservableDbCollections_DataRepository_Microsoft_Extensions_Logging_ILogger_CasualTasker_ViewModels_MainPageViewModel__
  commentId: M:CasualTasker.ViewModels.MainPageViewModel.#ctor(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository,Microsoft.Extensions.Logging.ILogger{CasualTasker.ViewModels.MainPageViewModel})
  name.vb: MainPageViewModel(DataRepository, ILogger(Of MainPageViewModel))
  fullName: CasualTasker.ViewModels.MainPageViewModel.MainPageViewModel(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository, Microsoft.Extensions.Logging.ILogger<CasualTasker.ViewModels.MainPageViewModel>)
  fullName.vb: CasualTasker.ViewModels.MainPageViewModel.MainPageViewModel(CasualTasker.Infrastructure.ObservableDbCollections.DataRepository, Microsoft.Extensions.Logging.ILogger(Of CasualTasker.ViewModels.MainPageViewModel))
  nameWithType: MainPageViewModel.MainPageViewModel(DataRepository, ILogger<MainPageViewModel>)
  nameWithType.vb: MainPageViewModel.MainPageViewModel(DataRepository, ILogger(Of MainPageViewModel))
- uid: CasualTasker.ViewModels.MainPageViewModel.#ctor*
  name: MainPageViewModel
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel__ctor_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.#ctor
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.MainPageViewModel
  nameWithType: MainPageViewModel.MainPageViewModel
- uid: CasualTasker.ViewModels.MainPageViewModel.Categories
  name: Categories
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_Categories
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.Categories
  fullName: CasualTasker.ViewModels.MainPageViewModel.Categories
  nameWithType: MainPageViewModel.Categories
- uid: CasualTasker.ViewModels.MainPageViewModel.Categories*
  name: Categories
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_Categories_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.Categories
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.Categories
  nameWithType: MainPageViewModel.Categories
- uid: CasualTasker.ViewModels.MainPageViewModel.DeleteTaskCommand
  name: DeleteTaskCommand
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_DeleteTaskCommand
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.DeleteTaskCommand
  fullName: CasualTasker.ViewModels.MainPageViewModel.DeleteTaskCommand
  nameWithType: MainPageViewModel.DeleteTaskCommand
- uid: CasualTasker.ViewModels.MainPageViewModel.DeleteTaskCommand*
  name: DeleteTaskCommand
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_DeleteTaskCommand_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.DeleteTaskCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.DeleteTaskCommand
  nameWithType: MainPageViewModel.DeleteTaskCommand
- uid: CasualTasker.ViewModels.MainPageViewModel.DownloadDataCommand
  name: DownloadDataCommand
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_DownloadDataCommand
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.DownloadDataCommand
  fullName: CasualTasker.ViewModels.MainPageViewModel.DownloadDataCommand
  nameWithType: MainPageViewModel.DownloadDataCommand
- uid: CasualTasker.ViewModels.MainPageViewModel.DownloadDataCommand*
  name: DownloadDataCommand
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_DownloadDataCommand_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.DownloadDataCommand
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.DownloadDataCommand
  nameWithType: MainPageViewModel.DownloadDataCommand
- uid: CasualTasker.ViewModels.MainPageViewModel.IsUsedCategoryFilter
  name: IsUsedCategoryFilter
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_IsUsedCategoryFilter
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.IsUsedCategoryFilter
  fullName: CasualTasker.ViewModels.MainPageViewModel.IsUsedCategoryFilter
  nameWithType: MainPageViewModel.IsUsedCategoryFilter
- uid: CasualTasker.ViewModels.MainPageViewModel.IsUsedCategoryFilter*
  name: IsUsedCategoryFilter
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_IsUsedCategoryFilter_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.IsUsedCategoryFilter
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.IsUsedCategoryFilter
  nameWithType: MainPageViewModel.IsUsedCategoryFilter
- uid: CasualTasker.ViewModels.MainPageViewModel.IsUsedDateFilter
  name: IsUsedDateFilter
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_IsUsedDateFilter
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.IsUsedDateFilter
  fullName: CasualTasker.ViewModels.MainPageViewModel.IsUsedDateFilter
  nameWithType: MainPageViewModel.IsUsedDateFilter
- uid: CasualTasker.ViewModels.MainPageViewModel.IsUsedDateFilter*
  name: IsUsedDateFilter
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_IsUsedDateFilter_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.IsUsedDateFilter
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.IsUsedDateFilter
  nameWithType: MainPageViewModel.IsUsedDateFilter
- uid: CasualTasker.ViewModels.MainPageViewModel.IsUsedStatusFilter
  name: IsUsedStatusFilter
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_IsUsedStatusFilter
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.IsUsedStatusFilter
  fullName: CasualTasker.ViewModels.MainPageViewModel.IsUsedStatusFilter
  nameWithType: MainPageViewModel.IsUsedStatusFilter
- uid: CasualTasker.ViewModels.MainPageViewModel.IsUsedStatusFilter*
  name: IsUsedStatusFilter
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_IsUsedStatusFilter_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.IsUsedStatusFilter
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.IsUsedStatusFilter
  nameWithType: MainPageViewModel.IsUsedStatusFilter
- uid: CasualTasker.ViewModels.MainPageViewModel.SearchPhrase
  name: SearchPhrase
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SearchPhrase
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.SearchPhrase
  fullName: CasualTasker.ViewModels.MainPageViewModel.SearchPhrase
  nameWithType: MainPageViewModel.SearchPhrase
- uid: CasualTasker.ViewModels.MainPageViewModel.SearchPhrase*
  name: SearchPhrase
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SearchPhrase_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.SearchPhrase
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.SearchPhrase
  nameWithType: MainPageViewModel.SearchPhrase
- uid: CasualTasker.ViewModels.MainPageViewModel.SearchStatus
  name: SearchStatus
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SearchStatus
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.SearchStatus
  fullName: CasualTasker.ViewModels.MainPageViewModel.SearchStatus
  nameWithType: MainPageViewModel.SearchStatus
- uid: CasualTasker.ViewModels.MainPageViewModel.SearchStatus*
  name: SearchStatus
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SearchStatus_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.SearchStatus
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.SearchStatus
  nameWithType: MainPageViewModel.SearchStatus
- uid: CasualTasker.ViewModels.MainPageViewModel.SelectedCategory
  name: SelectedCategory
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SelectedCategory
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.SelectedCategory
  fullName: CasualTasker.ViewModels.MainPageViewModel.SelectedCategory
  nameWithType: MainPageViewModel.SelectedCategory
- uid: CasualTasker.ViewModels.MainPageViewModel.SelectedCategory*
  name: SelectedCategory
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SelectedCategory_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.SelectedCategory
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.SelectedCategory
  nameWithType: MainPageViewModel.SelectedCategory
- uid: CasualTasker.ViewModels.MainPageViewModel.SelectedDate
  name: SelectedDate
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SelectedDate
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.SelectedDate
  fullName: CasualTasker.ViewModels.MainPageViewModel.SelectedDate
  nameWithType: MainPageViewModel.SelectedDate
- uid: CasualTasker.ViewModels.MainPageViewModel.SelectedDate*
  name: SelectedDate
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SelectedDate_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.SelectedDate
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.SelectedDate
  nameWithType: MainPageViewModel.SelectedDate
- uid: CasualTasker.ViewModels.MainPageViewModel.SelectedTask
  name: SelectedTask
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SelectedTask
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.SelectedTask
  fullName: CasualTasker.ViewModels.MainPageViewModel.SelectedTask
  nameWithType: MainPageViewModel.SelectedTask
- uid: CasualTasker.ViewModels.MainPageViewModel.SelectedTask*
  name: SelectedTask
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_SelectedTask_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.SelectedTask
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.SelectedTask
  nameWithType: MainPageViewModel.SelectedTask
- uid: CasualTasker.ViewModels.MainPageViewModel.Tasks
  name: Tasks
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_Tasks
  commentId: P:CasualTasker.ViewModels.MainPageViewModel.Tasks
  fullName: CasualTasker.ViewModels.MainPageViewModel.Tasks
  nameWithType: MainPageViewModel.Tasks
- uid: CasualTasker.ViewModels.MainPageViewModel.Tasks*
  name: Tasks
  href: api/CasualTasker.ViewModels.MainPageViewModel.html#CasualTasker_ViewModels_MainPageViewModel_Tasks_
  commentId: Overload:CasualTasker.ViewModels.MainPageViewModel.Tasks
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainPageViewModel.Tasks
  nameWithType: MainPageViewModel.Tasks
- uid: CasualTasker.ViewModels.MainWindowViewModel
  name: MainWindowViewModel
  href: api/CasualTasker.ViewModels.MainWindowViewModel.html
  commentId: T:CasualTasker.ViewModels.MainWindowViewModel
  fullName: CasualTasker.ViewModels.MainWindowViewModel
  nameWithType: MainWindowViewModel
- uid: CasualTasker.ViewModels.MainWindowViewModel.#ctor
  name: MainWindowViewModel()
  href: api/CasualTasker.ViewModels.MainWindowViewModel.html#CasualTasker_ViewModels_MainWindowViewModel__ctor
  commentId: M:CasualTasker.ViewModels.MainWindowViewModel.#ctor
  fullName: CasualTasker.ViewModels.MainWindowViewModel.MainWindowViewModel()
  nameWithType: MainWindowViewModel.MainWindowViewModel()
- uid: CasualTasker.ViewModels.MainWindowViewModel.#ctor*
  name: MainWindowViewModel
  href: api/CasualTasker.ViewModels.MainWindowViewModel.html#CasualTasker_ViewModels_MainWindowViewModel__ctor_
  commentId: Overload:CasualTasker.ViewModels.MainWindowViewModel.#ctor
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainWindowViewModel.MainWindowViewModel
  nameWithType: MainWindowViewModel.MainWindowViewModel
- uid: CasualTasker.ViewModels.MainWindowViewModel.Title
  name: Title
  href: api/CasualTasker.ViewModels.MainWindowViewModel.html#CasualTasker_ViewModels_MainWindowViewModel_Title
  commentId: P:CasualTasker.ViewModels.MainWindowViewModel.Title
  fullName: CasualTasker.ViewModels.MainWindowViewModel.Title
  nameWithType: MainWindowViewModel.Title
- uid: CasualTasker.ViewModels.MainWindowViewModel.Title*
  name: Title
  href: api/CasualTasker.ViewModels.MainWindowViewModel.html#CasualTasker_ViewModels_MainWindowViewModel_Title_
  commentId: Overload:CasualTasker.ViewModels.MainWindowViewModel.Title
  isSpec: "True"
  fullName: CasualTasker.ViewModels.MainWindowViewModel.Title
  nameWithType: MainWindowViewModel.Title
- uid: CasualTasker.ViewModels.ViewModelLocator
  name: ViewModelLocator
  href: api/CasualTasker.ViewModels.ViewModelLocator.html
  commentId: T:CasualTasker.ViewModels.ViewModelLocator
  fullName: CasualTasker.ViewModels.ViewModelLocator
  nameWithType: ViewModelLocator
- uid: CasualTasker.ViewModels.ViewModelLocator.EditCategoryVM
  name: EditCategoryVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_EditCategoryVM
  commentId: P:CasualTasker.ViewModels.ViewModelLocator.EditCategoryVM
  fullName: CasualTasker.ViewModels.ViewModelLocator.EditCategoryVM
  nameWithType: ViewModelLocator.EditCategoryVM
- uid: CasualTasker.ViewModels.ViewModelLocator.EditCategoryVM*
  name: EditCategoryVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_EditCategoryVM_
  commentId: Overload:CasualTasker.ViewModels.ViewModelLocator.EditCategoryVM
  isSpec: "True"
  fullName: CasualTasker.ViewModels.ViewModelLocator.EditCategoryVM
  nameWithType: ViewModelLocator.EditCategoryVM
- uid: CasualTasker.ViewModels.ViewModelLocator.EditTaskVM
  name: EditTaskVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_EditTaskVM
  commentId: P:CasualTasker.ViewModels.ViewModelLocator.EditTaskVM
  fullName: CasualTasker.ViewModels.ViewModelLocator.EditTaskVM
  nameWithType: ViewModelLocator.EditTaskVM
- uid: CasualTasker.ViewModels.ViewModelLocator.EditTaskVM*
  name: EditTaskVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_EditTaskVM_
  commentId: Overload:CasualTasker.ViewModels.ViewModelLocator.EditTaskVM
  isSpec: "True"
  fullName: CasualTasker.ViewModels.ViewModelLocator.EditTaskVM
  nameWithType: ViewModelLocator.EditTaskVM
- uid: CasualTasker.ViewModels.ViewModelLocator.MainPageVM
  name: MainPageVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_MainPageVM
  commentId: P:CasualTasker.ViewModels.ViewModelLocator.MainPageVM
  fullName: CasualTasker.ViewModels.ViewModelLocator.MainPageVM
  nameWithType: ViewModelLocator.MainPageVM
- uid: CasualTasker.ViewModels.ViewModelLocator.MainPageVM*
  name: MainPageVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_MainPageVM_
  commentId: Overload:CasualTasker.ViewModels.ViewModelLocator.MainPageVM
  isSpec: "True"
  fullName: CasualTasker.ViewModels.ViewModelLocator.MainPageVM
  nameWithType: ViewModelLocator.MainPageVM
- uid: CasualTasker.ViewModels.ViewModelLocator.MainWindowVM
  name: MainWindowVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_MainWindowVM
  commentId: P:CasualTasker.ViewModels.ViewModelLocator.MainWindowVM
  fullName: CasualTasker.ViewModels.ViewModelLocator.MainWindowVM
  nameWithType: ViewModelLocator.MainWindowVM
- uid: CasualTasker.ViewModels.ViewModelLocator.MainWindowVM*
  name: MainWindowVM
  href: api/CasualTasker.ViewModels.ViewModelLocator.html#CasualTasker_ViewModels_ViewModelLocator_MainWindowVM_
  commentId: Overload:CasualTasker.ViewModels.ViewModelLocator.MainWindowVM
  isSpec: "True"
  fullName: CasualTasker.ViewModels.ViewModelLocator.MainWindowVM
  nameWithType: ViewModelLocator.MainWindowVM
- uid: CasualTasker.Views
  name: CasualTasker.Views
  href: api/CasualTasker.Views.html
  commentId: N:CasualTasker.Views
  fullName: CasualTasker.Views
  nameWithType: CasualTasker.Views
- uid: CasualTasker.Views.EditCategoryPage
  name: EditCategoryPage
  href: api/CasualTasker.Views.EditCategoryPage.html
  commentId: T:CasualTasker.Views.EditCategoryPage
  fullName: CasualTasker.Views.EditCategoryPage
  nameWithType: EditCategoryPage
- uid: CasualTasker.Views.EditCategoryPage.#ctor
  name: EditCategoryPage()
  href: api/CasualTasker.Views.EditCategoryPage.html#CasualTasker_Views_EditCategoryPage__ctor
  commentId: M:CasualTasker.Views.EditCategoryPage.#ctor
  fullName: CasualTasker.Views.EditCategoryPage.EditCategoryPage()
  nameWithType: EditCategoryPage.EditCategoryPage()
- uid: CasualTasker.Views.EditCategoryPage.#ctor*
  name: EditCategoryPage
  href: api/CasualTasker.Views.EditCategoryPage.html#CasualTasker_Views_EditCategoryPage__ctor_
  commentId: Overload:CasualTasker.Views.EditCategoryPage.#ctor
  isSpec: "True"
  fullName: CasualTasker.Views.EditCategoryPage.EditCategoryPage
  nameWithType: EditCategoryPage.EditCategoryPage
- uid: CasualTasker.Views.EditCategoryPage.InitializeComponent
  name: InitializeComponent()
  href: api/CasualTasker.Views.EditCategoryPage.html#CasualTasker_Views_EditCategoryPage_InitializeComponent
  commentId: M:CasualTasker.Views.EditCategoryPage.InitializeComponent
  fullName: CasualTasker.Views.EditCategoryPage.InitializeComponent()
  nameWithType: EditCategoryPage.InitializeComponent()
- uid: CasualTasker.Views.EditCategoryPage.InitializeComponent*
  name: InitializeComponent
  href: api/CasualTasker.Views.EditCategoryPage.html#CasualTasker_Views_EditCategoryPage_InitializeComponent_
  commentId: Overload:CasualTasker.Views.EditCategoryPage.InitializeComponent
  isSpec: "True"
  fullName: CasualTasker.Views.EditCategoryPage.InitializeComponent
  nameWithType: EditCategoryPage.InitializeComponent
- uid: CasualTasker.Views.EditTaskPage
  name: EditTaskPage
  href: api/CasualTasker.Views.EditTaskPage.html
  commentId: T:CasualTasker.Views.EditTaskPage
  fullName: CasualTasker.Views.EditTaskPage
  nameWithType: EditTaskPage
- uid: CasualTasker.Views.EditTaskPage.#ctor
  name: EditTaskPage()
  href: api/CasualTasker.Views.EditTaskPage.html#CasualTasker_Views_EditTaskPage__ctor
  commentId: M:CasualTasker.Views.EditTaskPage.#ctor
  fullName: CasualTasker.Views.EditTaskPage.EditTaskPage()
  nameWithType: EditTaskPage.EditTaskPage()
- uid: CasualTasker.Views.EditTaskPage.#ctor*
  name: EditTaskPage
  href: api/CasualTasker.Views.EditTaskPage.html#CasualTasker_Views_EditTaskPage__ctor_
  commentId: Overload:CasualTasker.Views.EditTaskPage.#ctor
  isSpec: "True"
  fullName: CasualTasker.Views.EditTaskPage.EditTaskPage
  nameWithType: EditTaskPage.EditTaskPage
- uid: CasualTasker.Views.EditTaskPage.InitializeComponent
  name: InitializeComponent()
  href: api/CasualTasker.Views.EditTaskPage.html#CasualTasker_Views_EditTaskPage_InitializeComponent
  commentId: M:CasualTasker.Views.EditTaskPage.InitializeComponent
  fullName: CasualTasker.Views.EditTaskPage.InitializeComponent()
  nameWithType: EditTaskPage.InitializeComponent()
- uid: CasualTasker.Views.EditTaskPage.InitializeComponent*
  name: InitializeComponent
  href: api/CasualTasker.Views.EditTaskPage.html#CasualTasker_Views_EditTaskPage_InitializeComponent_
  commentId: Overload:CasualTasker.Views.EditTaskPage.InitializeComponent
  isSpec: "True"
  fullName: CasualTasker.Views.EditTaskPage.InitializeComponent
  nameWithType: EditTaskPage.InitializeComponent
- uid: CasualTasker.Views.MainPage
  name: MainPage
  href: api/CasualTasker.Views.MainPage.html
  commentId: T:CasualTasker.Views.MainPage
  fullName: CasualTasker.Views.MainPage
  nameWithType: MainPage
- uid: CasualTasker.Views.MainPage.#ctor
  name: MainPage()
  href: api/CasualTasker.Views.MainPage.html#CasualTasker_Views_MainPage__ctor
  commentId: M:CasualTasker.Views.MainPage.#ctor
  fullName: CasualTasker.Views.MainPage.MainPage()
  nameWithType: MainPage.MainPage()
- uid: CasualTasker.Views.MainPage.#ctor*
  name: MainPage
  href: api/CasualTasker.Views.MainPage.html#CasualTasker_Views_MainPage__ctor_
  commentId: Overload:CasualTasker.Views.MainPage.#ctor
  isSpec: "True"
  fullName: CasualTasker.Views.MainPage.MainPage
  nameWithType: MainPage.MainPage
- uid: CasualTasker.Views.MainPage.InitializeComponent
  name: InitializeComponent()
  href: api/CasualTasker.Views.MainPage.html#CasualTasker_Views_MainPage_InitializeComponent
  commentId: M:CasualTasker.Views.MainPage.InitializeComponent
  fullName: CasualTasker.Views.MainPage.InitializeComponent()
  nameWithType: MainPage.InitializeComponent()
- uid: CasualTasker.Views.MainPage.InitializeComponent*
  name: InitializeComponent
  href: api/CasualTasker.Views.MainPage.html#CasualTasker_Views_MainPage_InitializeComponent_
  commentId: Overload:CasualTasker.Views.MainPage.InitializeComponent
  isSpec: "True"
  fullName: CasualTasker.Views.MainPage.InitializeComponent
  nameWithType: MainPage.InitializeComponent
